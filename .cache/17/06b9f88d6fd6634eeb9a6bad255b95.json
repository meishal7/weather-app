{"id":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","dependencies":[{"name":"/Users/elenamudrakova/Desktop/lena/webdev/weather-app/package.json","includedInParent":true,"mtime":1635372806005},{"name":"/Users/elenamudrakova/Desktop/lena/webdev/weather-app/node_modules/date-fns-tz/esm/getTimezoneOffset/package.json","includedInParent":true,"mtime":499162500000},{"name":"../_lib/tzParseTimezone","loc":{"line":1,"column":28},"parent":"/Users/elenamudrakova/Desktop/lena/webdev/weather-app/node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","resolved":"/Users/elenamudrakova/Desktop/lena/webdev/weather-app/node_modules/date-fns-tz/esm/_lib/tzParseTimezone/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getTimezoneOffset;\n\nvar _tzParseTimezone = _interopRequireDefault(require(\"../_lib/tzParseTimezone\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name getTimezoneOffset\n * @category Time Zone Helpers\n * @summary Gets the offset in milliseconds between the time zone and Universal Coordinated Time (UTC)\n *\n * @description\n * Returns the time zone offset from UTC time in milliseconds for IANA time zones as well\n * as other time zone offset string formats.\n *\n * For time zones where daylight savings time is applicable a `Date` should be passed on\n * the second parameter to ensure the offset correctly accounts for DST at that time of\n * year. When omitted, the current date is used.\n *\n * @param {String} timeZone - the time zone of this local time, can be an offset or IANA time zone\n * @param {Date|Number} [date] - the date with values representing the local time\n * @returns {Number} the time zone offset in milliseconds\n *\n * @example\n * const result = getTimezoneOffset('-07:00')\n *   //=> -18000000 (-7 * 60 * 60 * 1000)\n * const result = getTimezoneOffset('Africa/Johannesburg')\n *   //=> 7200000 (2 * 60 * 60 * 1000)\n * const result = getTimezoneOffset('America/New_York', new Date(2016, 0, 1))\n *   //=> -18000000 (-5 * 60 * 60 * 1000)\n * const result = getTimezoneOffset('America/New_York', new Date(2016, 6, 1))\n *   //=> -14400000 (-4 * 60 * 60 * 1000)\n */\nfunction getTimezoneOffset(timeZone, date) {\n  return -(0, _tzParseTimezone.default)(timeZone, date);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":5,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":6,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":7,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":8,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":9,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":10,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":11,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":12,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":13,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":14,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":15,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":16,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":17,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":18,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":19,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":20,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":21,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":22,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":23,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":24,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":25,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":26,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":27,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":28,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":29,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":30,"column":15}},{"name":"getTimezoneOffset","generated":{"line":39,"column":9},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":30,"column":24}},{"generated":{"line":39,"column":26},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":30,"column":15}},{"name":"timeZone","generated":{"line":39,"column":27},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":30,"column":42}},{"generated":{"line":39,"column":35},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":30,"column":15}},{"name":"date","generated":{"line":39,"column":37},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":30,"column":52}},{"generated":{"line":39,"column":41},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":30,"column":15}},{"generated":{"line":39,"column":43},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":30,"column":58}},{"generated":{"line":40,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":31,"column":2}},{"generated":{"line":40,"column":9},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":31,"column":9}},{"generated":{"line":40,"column":10},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":31,"column":10}},{"name":"timeZone","generated":{"line":40,"column":40},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":31,"column":26}},{"generated":{"line":40,"column":48},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":31,"column":10}},{"name":"date","generated":{"line":40,"column":50},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":31,"column":36}},{"generated":{"line":40,"column":54},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":31,"column":10}},{"generated":{"line":40,"column":55},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":31,"column":2}},{"generated":{"line":41,"column":0},"source":"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js","original":{"line":32,"column":1}}],"sources":{"node_modules/date-fns-tz/esm/getTimezoneOffset/index.js":"import tzParseTimezone from '../_lib/tzParseTimezone'\n\n/**\n * @name getTimezoneOffset\n * @category Time Zone Helpers\n * @summary Gets the offset in milliseconds between the time zone and Universal Coordinated Time (UTC)\n *\n * @description\n * Returns the time zone offset from UTC time in milliseconds for IANA time zones as well\n * as other time zone offset string formats.\n *\n * For time zones where daylight savings time is applicable a `Date` should be passed on\n * the second parameter to ensure the offset correctly accounts for DST at that time of\n * year. When omitted, the current date is used.\n *\n * @param {String} timeZone - the time zone of this local time, can be an offset or IANA time zone\n * @param {Date|Number} [date] - the date with values representing the local time\n * @returns {Number} the time zone offset in milliseconds\n *\n * @example\n * const result = getTimezoneOffset('-07:00')\n *   //=> -18000000 (-7 * 60 * 60 * 1000)\n * const result = getTimezoneOffset('Africa/Johannesburg')\n *   //=> 7200000 (2 * 60 * 60 * 1000)\n * const result = getTimezoneOffset('America/New_York', new Date(2016, 0, 1))\n *   //=> -18000000 (-5 * 60 * 60 * 1000)\n * const result = getTimezoneOffset('America/New_York', new Date(2016, 6, 1))\n *   //=> -14400000 (-4 * 60 * 60 * 1000)\n */\nexport default function getTimezoneOffset(timeZone, date) {\n  return -tzParseTimezone(timeZone, date)\n}\n"},"lineCount":null}},"error":null,"hash":"bd178ac2f4dbcdcdc470d268103b0a9a","cacheData":{"env":{}}}