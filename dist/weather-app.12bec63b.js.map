{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","modules/getLatLong.js","modules/getWeather.js","modules/displayCurrLocationWeather.js","modules/getDegree.js","modules/displayWeatherFromSavedLoc.js","node_modules/date-fns/esm/_lib/toInteger/index.js","node_modules/date-fns/esm/_lib/requiredArgs/index.js","node_modules/date-fns/esm/toDate/index.js","node_modules/date-fns/esm/addDays/index.js","node_modules/date-fns/esm/addMonths/index.js","node_modules/date-fns/esm/add/index.js","node_modules/date-fns/esm/isWeekend/index.js","node_modules/date-fns/esm/isSunday/index.js","node_modules/date-fns/esm/isSaturday/index.js","node_modules/date-fns/esm/addBusinessDays/index.js","node_modules/date-fns/esm/addMilliseconds/index.js","node_modules/date-fns/esm/addHours/index.js","node_modules/date-fns/esm/startOfWeek/index.js","node_modules/date-fns/esm/startOfISOWeek/index.js","node_modules/date-fns/esm/getISOWeekYear/index.js","node_modules/date-fns/esm/startOfISOWeekYear/index.js","node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","node_modules/date-fns/esm/startOfDay/index.js","node_modules/date-fns/esm/differenceInCalendarDays/index.js","node_modules/date-fns/esm/setISOWeekYear/index.js","node_modules/date-fns/esm/addISOWeekYears/index.js","node_modules/date-fns/esm/addMinutes/index.js","node_modules/date-fns/esm/addQuarters/index.js","node_modules/date-fns/esm/addSeconds/index.js","node_modules/date-fns/esm/addWeeks/index.js","node_modules/date-fns/esm/addYears/index.js","node_modules/date-fns/esm/areIntervalsOverlapping/index.js","node_modules/date-fns/esm/max/index.js","node_modules/date-fns/esm/min/index.js","node_modules/date-fns/esm/clamp/index.js","node_modules/date-fns/esm/closestIndexTo/index.js","node_modules/date-fns/esm/closestTo/index.js","node_modules/date-fns/esm/compareAsc/index.js","node_modules/date-fns/esm/compareDesc/index.js","node_modules/date-fns/esm/constants/index.js","node_modules/date-fns/esm/daysToWeeks/index.js","node_modules/date-fns/esm/isDate/index.js","node_modules/date-fns/esm/isValid/index.js","node_modules/date-fns/esm/isSameDay/index.js","node_modules/date-fns/esm/differenceInBusinessDays/index.js","node_modules/date-fns/esm/differenceInCalendarISOWeekYears/index.js","node_modules/date-fns/esm/differenceInCalendarISOWeeks/index.js","node_modules/date-fns/esm/differenceInCalendarMonths/index.js","node_modules/date-fns/esm/getQuarter/index.js","node_modules/date-fns/esm/differenceInCalendarQuarters/index.js","node_modules/date-fns/esm/differenceInCalendarWeeks/index.js","node_modules/date-fns/esm/differenceInCalendarYears/index.js","node_modules/date-fns/esm/differenceInDays/index.js","node_modules/date-fns/esm/differenceInMilliseconds/index.js","node_modules/date-fns/esm/_lib/roundingMethods/index.js","node_modules/date-fns/esm/differenceInHours/index.js","node_modules/date-fns/esm/subISOWeekYears/index.js","node_modules/date-fns/esm/differenceInISOWeekYears/index.js","node_modules/date-fns/esm/differenceInMinutes/index.js","node_modules/date-fns/esm/endOfDay/index.js","node_modules/date-fns/esm/endOfMonth/index.js","node_modules/date-fns/esm/isLastDayOfMonth/index.js","node_modules/date-fns/esm/differenceInMonths/index.js","node_modules/date-fns/esm/differenceInQuarters/index.js","node_modules/date-fns/esm/differenceInSeconds/index.js","node_modules/date-fns/esm/differenceInWeeks/index.js","node_modules/date-fns/esm/differenceInYears/index.js","node_modules/date-fns/esm/eachDayOfInterval/index.js","node_modules/date-fns/esm/eachHourOfInterval/index.js","node_modules/date-fns/esm/startOfMinute/index.js","node_modules/date-fns/esm/eachMinuteOfInterval/index.js","node_modules/date-fns/esm/eachMonthOfInterval/index.js","node_modules/date-fns/esm/startOfQuarter/index.js","node_modules/date-fns/esm/eachQuarterOfInterval/index.js","node_modules/date-fns/esm/eachWeekOfInterval/index.js","node_modules/date-fns/esm/eachWeekendOfInterval/index.js","node_modules/date-fns/esm/startOfMonth/index.js","node_modules/date-fns/esm/eachWeekendOfMonth/index.js","node_modules/date-fns/esm/startOfYear/index.js","node_modules/date-fns/esm/endOfYear/index.js","node_modules/date-fns/esm/eachWeekendOfYear/index.js","node_modules/date-fns/esm/eachYearOfInterval/index.js","node_modules/date-fns/esm/endOfDecade/index.js","node_modules/date-fns/esm/endOfHour/index.js","node_modules/date-fns/esm/endOfWeek/index.js","node_modules/date-fns/esm/endOfISOWeek/index.js","node_modules/date-fns/esm/endOfISOWeekYear/index.js","node_modules/date-fns/esm/endOfMinute/index.js","node_modules/date-fns/esm/endOfQuarter/index.js","node_modules/date-fns/esm/endOfSecond/index.js","node_modules/date-fns/esm/endOfToday/index.js","node_modules/date-fns/esm/endOfTomorrow/index.js","node_modules/date-fns/esm/endOfYesterday/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","node_modules/date-fns/esm/locale/en-US/index.js","node_modules/date-fns/esm/subMilliseconds/index.js","node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/getUTCWeek/index.js","node_modules/date-fns/esm/_lib/format/formatters/index.js","node_modules/date-fns/esm/_lib/format/longFormatters/index.js","node_modules/date-fns/esm/_lib/protectedTokens/index.js","node_modules/date-fns/esm/format/index.js","node_modules/date-fns/esm/_lib/assign/index.js","node_modules/date-fns/esm/_lib/cloneObject/index.js","node_modules/date-fns/esm/formatDistance/index.js","node_modules/date-fns/esm/formatDistanceStrict/index.js","node_modules/date-fns/esm/formatDistanceToNow/index.js","node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","node_modules/date-fns/esm/formatDuration/index.js","node_modules/date-fns/esm/formatISO/index.js","node_modules/date-fns/esm/formatISO9075/index.js","node_modules/date-fns/esm/formatISODuration/index.js","node_modules/date-fns/esm/formatRFC3339/index.js","node_modules/date-fns/esm/formatRFC7231/index.js","node_modules/date-fns/esm/formatRelative/index.js","node_modules/date-fns/esm/fromUnixTime/index.js","node_modules/date-fns/esm/getDate/index.js","node_modules/date-fns/esm/getDay/index.js","node_modules/date-fns/esm/getDayOfYear/index.js","node_modules/date-fns/esm/getDaysInMonth/index.js","node_modules/date-fns/esm/isLeapYear/index.js","node_modules/date-fns/esm/getDaysInYear/index.js","node_modules/date-fns/esm/getDecade/index.js","node_modules/date-fns/esm/getHours/index.js","node_modules/date-fns/esm/getISODay/index.js","node_modules/date-fns/esm/getISOWeek/index.js","node_modules/date-fns/esm/getISOWeeksInYear/index.js","node_modules/date-fns/esm/getMilliseconds/index.js","node_modules/date-fns/esm/getMinutes/index.js","node_modules/date-fns/esm/getMonth/index.js","node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js","node_modules/date-fns/esm/getSeconds/index.js","node_modules/date-fns/esm/getTime/index.js","node_modules/date-fns/esm/getUnixTime/index.js","node_modules/date-fns/esm/getWeekYear/index.js","node_modules/date-fns/esm/startOfWeekYear/index.js","node_modules/date-fns/esm/getWeek/index.js","node_modules/date-fns/esm/getWeekOfMonth/index.js","node_modules/date-fns/esm/lastDayOfMonth/index.js","node_modules/date-fns/esm/getWeeksInMonth/index.js","node_modules/date-fns/esm/getYear/index.js","node_modules/date-fns/esm/hoursToMilliseconds/index.js","node_modules/date-fns/esm/hoursToMinutes/index.js","node_modules/date-fns/esm/hoursToSeconds/index.js","node_modules/date-fns/esm/subDays/index.js","node_modules/date-fns/esm/subMonths/index.js","node_modules/date-fns/esm/sub/index.js","node_modules/date-fns/esm/intervalToDuration/index.js","node_modules/date-fns/esm/intlFormat/index.js","node_modules/date-fns/esm/isAfter/index.js","node_modules/date-fns/esm/isBefore/index.js","node_modules/date-fns/esm/isEqual/index.js","node_modules/date-fns/esm/isExists/index.js","node_modules/date-fns/esm/isFirstDayOfMonth/index.js","node_modules/date-fns/esm/isFriday/index.js","node_modules/date-fns/esm/isFuture/index.js","node_modules/date-fns/esm/_lib/setUTCDay/index.js","node_modules/date-fns/esm/_lib/setUTCISODay/index.js","node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/setUTCWeek/index.js","node_modules/date-fns/esm/parse/_lib/parsers/index.js","node_modules/date-fns/esm/parse/index.js","node_modules/date-fns/esm/isMatch/index.js","node_modules/date-fns/esm/isMonday/index.js","node_modules/date-fns/esm/isPast/index.js","node_modules/date-fns/esm/startOfHour/index.js","node_modules/date-fns/esm/isSameHour/index.js","node_modules/date-fns/esm/isSameWeek/index.js","node_modules/date-fns/esm/isSameISOWeek/index.js","node_modules/date-fns/esm/isSameISOWeekYear/index.js","node_modules/date-fns/esm/isSameMinute/index.js","node_modules/date-fns/esm/isSameMonth/index.js","node_modules/date-fns/esm/isSameQuarter/index.js","node_modules/date-fns/esm/startOfSecond/index.js","node_modules/date-fns/esm/isSameSecond/index.js","node_modules/date-fns/esm/isSameYear/index.js","node_modules/date-fns/esm/isThisHour/index.js","node_modules/date-fns/esm/isThisISOWeek/index.js","node_modules/date-fns/esm/isThisMinute/index.js","node_modules/date-fns/esm/isThisMonth/index.js","node_modules/date-fns/esm/isThisQuarter/index.js","node_modules/date-fns/esm/isThisSecond/index.js","node_modules/date-fns/esm/isThisWeek/index.js","node_modules/date-fns/esm/isThisYear/index.js","node_modules/date-fns/esm/isThursday/index.js","node_modules/date-fns/esm/isToday/index.js","node_modules/date-fns/esm/isTomorrow/index.js","node_modules/date-fns/esm/isTuesday/index.js","node_modules/date-fns/esm/isWednesday/index.js","node_modules/date-fns/esm/isWithinInterval/index.js","node_modules/date-fns/esm/isYesterday/index.js","node_modules/date-fns/esm/lastDayOfDecade/index.js","node_modules/date-fns/esm/lastDayOfWeek/index.js","node_modules/date-fns/esm/lastDayOfISOWeek/index.js","node_modules/date-fns/esm/lastDayOfISOWeekYear/index.js","node_modules/date-fns/esm/lastDayOfQuarter/index.js","node_modules/date-fns/esm/lastDayOfYear/index.js","node_modules/date-fns/esm/lightFormat/index.js","node_modules/date-fns/esm/milliseconds/index.js","node_modules/date-fns/esm/millisecondsToHours/index.js","node_modules/date-fns/esm/millisecondsToMinutes/index.js","node_modules/date-fns/esm/millisecondsToSeconds/index.js","node_modules/date-fns/esm/minutesToHours/index.js","node_modules/date-fns/esm/minutesToMilliseconds/index.js","node_modules/date-fns/esm/minutesToSeconds/index.js","node_modules/date-fns/esm/monthsToQuarters/index.js","node_modules/date-fns/esm/monthsToYears/index.js","node_modules/date-fns/esm/nextDay/index.js","node_modules/date-fns/esm/nextFriday/index.js","node_modules/date-fns/esm/nextMonday/index.js","node_modules/date-fns/esm/nextSaturday/index.js","node_modules/date-fns/esm/nextSunday/index.js","node_modules/date-fns/esm/nextThursday/index.js","node_modules/date-fns/esm/nextTuesday/index.js","node_modules/date-fns/esm/nextWednesday/index.js","node_modules/date-fns/esm/parseISO/index.js","node_modules/date-fns/esm/parseJSON/index.js","node_modules/date-fns/esm/previousDay/index.js","node_modules/date-fns/esm/previousFriday/index.js","node_modules/date-fns/esm/previousMonday/index.js","node_modules/date-fns/esm/previousSaturday/index.js","node_modules/date-fns/esm/previousSunday/index.js","node_modules/date-fns/esm/previousThursday/index.js","node_modules/date-fns/esm/previousTuesday/index.js","node_modules/date-fns/esm/previousWednesday/index.js","node_modules/date-fns/esm/quartersToMonths/index.js","node_modules/date-fns/esm/quartersToYears/index.js","node_modules/date-fns/esm/roundToNearestMinutes/index.js","node_modules/date-fns/esm/secondsToHours/index.js","node_modules/date-fns/esm/secondsToMilliseconds/index.js","node_modules/date-fns/esm/secondsToMinutes/index.js","node_modules/date-fns/esm/setMonth/index.js","node_modules/date-fns/esm/set/index.js","node_modules/date-fns/esm/setDate/index.js","node_modules/date-fns/esm/setDay/index.js","node_modules/date-fns/esm/setDayOfYear/index.js","node_modules/date-fns/esm/setHours/index.js","node_modules/date-fns/esm/setISODay/index.js","node_modules/date-fns/esm/setISOWeek/index.js","node_modules/date-fns/esm/setMilliseconds/index.js","node_modules/date-fns/esm/setMinutes/index.js","node_modules/date-fns/esm/setQuarter/index.js","node_modules/date-fns/esm/setSeconds/index.js","node_modules/date-fns/esm/setWeek/index.js","node_modules/date-fns/esm/setWeekYear/index.js","node_modules/date-fns/esm/setYear/index.js","node_modules/date-fns/esm/startOfDecade/index.js","node_modules/date-fns/esm/startOfToday/index.js","node_modules/date-fns/esm/startOfTomorrow/index.js","node_modules/date-fns/esm/startOfYesterday/index.js","node_modules/date-fns/esm/subBusinessDays/index.js","node_modules/date-fns/esm/subHours/index.js","node_modules/date-fns/esm/subMinutes/index.js","node_modules/date-fns/esm/subQuarters/index.js","node_modules/date-fns/esm/subSeconds/index.js","node_modules/date-fns/esm/subWeeks/index.js","node_modules/date-fns/esm/subYears/index.js","node_modules/date-fns/esm/weeksToDays/index.js","node_modules/date-fns/esm/yearsToMonths/index.js","node_modules/date-fns/esm/yearsToQuarters/index.js","node_modules/date-fns/esm/index.js","modules/displaySavedLocations.js","modules/storeLocations.js","modules/googlePlaces.js","modules/setDegree.js","modules/resfreshSavedLocations.js","index.js"],"names":["getLatLong","coordinates","fetch","response","json","loc","split","city","getWeather","lattitude","longtitude","apiKey","weatherRes","data","displayCurrLocationWeather","weatherData","currCity","hourlyWeather","dailyWeather","degree","document","querySelector","currTemp","currCond","currWeatherDiv","currWeatherMin","currWeatherMax","hourWeatherList","weekWeatherList","textContent","Math","floor","current","temp","daily","min","max","weather","main","currentWeatherDayTime","dt","sunrise","sunset","style","backgroundImage","firstChild","lastChild","removeChild","forEach","hour","date","Date","hourLi","createElement","time","classList","hourImg","timeArray","toLocaleTimeString","hourDayTime","charAt","innerText","ceil","src","add","append","appendChild","day","weekLi","weekDayName","weekImgCondDiv","weekImgCond","weekLowTempDiv","weekImgTempLow","weekTempLow","weekHighTempDiv","weekImgTempHigh","weekTempHigh","weekHumidityDiv","weekImgHumidity","weekHumidity","weekDate","dayName","getUTCDay","humidity","sunriseTime","sunriseTimeArray","sunsetTime","sunsetTimeArray","feelsLike","feels_like","pressureConverted","pressure","toFixed","windDirection","wind_dig","wind","wind_speed","getDegree","dataFromStorage","JSON","parse","localStorage","getItem","defaultDegree","displayWeatherFromSavedLoc","event","footer","toggle","cities","name","target","childNodes","hourly","toInteger","dirtyNumber","NaN","number","Number","isNaN","requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","getTime","console","warn","Error","stack","addDays","dirtyDate","dirtyAmount","amount","setDate","getDate","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","duration","years","months","weeks","days","hours","minutes","seconds","dateWithMonths","dateWithDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","isWeekend","getDay","isSunday","isSaturday","addBusinessDays","startedOnWeekend","getHours","sign","fullWeeks","restDays","abs","setHours","addMilliseconds","timestamp","MILLISECONDS_IN_HOUR","addHours","startOfWeek","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","diff","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfISOWeekYear","fourthOfJanuary","getTimezoneOffsetInMilliseconds","utcDate","UTC","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","startOfDay","MILLISECONDS_IN_DAY","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","setISOWeekYear","dirtyISOWeekYear","isoWeekYear","addISOWeekYears","MILLISECONDS_IN_MINUTE","addMinutes","addQuarters","addSeconds","addWeeks","addYears","areIntervalsOverlapping","dirtyIntervalLeft","dirtyIntervalRight","undefined","inclusive","intervalLeft","intervalRight","leftStartTime","start","leftEndTime","end","rightStartTime","rightEndTime","dirtyDatesArray","datesArray","Array","slice","result","currentDate","clamp","_ref","closestIndexTo","dirtyDateToCompare","dateToCompare","timeToCompare","minDistance","index","distance","closestTo","compareAsc","dateLeft","dateRight","compareDesc","daysInWeek","maxTime","pow","millisecondsInMinute","millisecondsInHour","millisecondsInSecond","minTime","minutesInHour","monthsInQuarter","monthsInYear","quartersInYear","secondsInHour","secondsInMinute","daysToWeeks","isDate","value","isValid","isSameDay","dateLeftStartOfDay","dateRightStartOfDay","differenceInBusinessDays","calendarDifference","differenceInCalendarISOWeekYears","MILLISECONDS_IN_WEEK","differenceInCalendarISOWeeks","startOfISOWeekLeft","startOfISOWeekRight","differenceInCalendarMonths","yearDiff","monthDiff","getQuarter","quarter","differenceInCalendarQuarters","quarterDiff","differenceInCalendarWeeks","startOfWeekLeft","startOfWeekRight","differenceInCalendarYears","compareLocalAsc","differenceInDays","difference","isLastDayNotFull","differenceInMilliseconds","roundingMap","trunc","defaultRoundingMethod","getRoundingMethod","method","differenceInHours","roundingMethod","subISOWeekYears","differenceInISOWeekYears","isLastISOWeekYearNotFull","differenceInMinutes","endOfDay","endOfMonth","month","isLastDayOfMonth","differenceInMonths","isLastMonthNotFull","differenceInQuarters","differenceInSeconds","differenceInWeeks","differenceInYears","isLastYearNotFull","eachDayOfInterval","dirtyInterval","interval","startDate","endDate","endTime","dates","step","push","eachHourOfInterval","startTime","setMinutes","startOfMinute","setSeconds","eachMinuteOfInterval","eachMonthOfInterval","startOfQuarter","currentMonth","eachQuarterOfInterval","startDateQuarter","endDateQuarter","quarters","currentQuarter","eachWeekOfInterval","startDateWeek","endDateWeek","currentWeek","eachWeekendOfInterval","dateInterval","weekends","startOfMonth","eachWeekendOfMonth","startOfYear","cleanDate","endOfYear","eachWeekendOfYear","eachYearOfInterval","endOfDecade","decade","endOfHour","endOfWeek","endOfISOWeek","endOfISOWeekYear","setMilliseconds","endOfMinute","endOfQuarter","endOfSecond","endOfToday","now","endOfTomorrow","endOfYesterday","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","tokenValue","replace","addSuffix","comparison","buildFormatLongFn","width","String","defaultWidth","format","formats","dateFormats","full","long","medium","short","timeFormats","dateTimeFormats","formatLong","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","formatRelative","_date","_baseDate","_options","buildLocalizeFn","dirtyIndex","context","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","ordinalNumber","rem100","localize","era","dayPeriod","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","isArray","findIndex","pattern","test","findKey","valueCallback","rest","object","predicate","hasOwnProperty","array","buildMatchPatternFn","parseResult","parsePattern","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","parseInt","code","firstWeekContainsDate","subMilliseconds","addLeadingZeros","targetLength","output","formatters","y","signedYear","getUTCFullYear","M","getUTCMonth","d","getUTCDate","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","getUTCDayOfYear","setUTCMonth","setUTCHours","startOfYearTimestamp","startOfUTCISOWeek","setUTCDate","getUTCISOWeekYear","startOfUTCISOWeekYear","getUTCISOWeek","startOfUTCWeek","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","getUTCWeek","dayPeriodEnum","G","unit","lightFormatters","Y","signedWeekYear","weekYear","twoDigitYear","R","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","toLowerCase","b","B","K","k","X","_localize","originalDate","_originalDate","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","dirtyDelimiter","absOffset","delimiter","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","longFormatters","p","P","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","input","concat","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","defaultLocale","formatterOptions","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","assign","dirtyObject","property","cloneObject","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyBaseDate","localizeOptions","Boolean","offsetInSeconds","includeSeconds","nearestMonth","monthsSinceStartOfYear","MINUTES_IN_YEAR","formatDistanceStrict","roundingMethodFn","dstNormalizedMinutes","roundedMinutes","formatDistanceToNow","formatDistanceToNowStrict","defaultFormat","formatDuration","zero","reduce","acc","addChunk","formatISO","representation","tzOffset","dateDelimiter","timeDelimiter","absoluteOffset","hourOffset","minuteOffset","minute","second","separator","formatISO9075","formatISODuration","_duration$years","_duration$months","_duration$days","_duration$hours","_duration$minutes","_duration$seconds","formatRFC3339","_ref$fractionDigits","fractionDigits","fractionalSecond","formatRFC7231","monthName","baseDate","_ref$locale","_ref$weekStartsOn","utcBaseDate","fromUnixTime","dirtyUnixTime","unixTime","getDayOfYear","getDaysInMonth","monthIndex","lastDayOfMonth","isLeapYear","getDaysInYear","getDecade","getISODay","getISOWeek","getISOWeeksInYear","thisYear","nextYear","valueOf","getOverlappingDaysInIntervals","isOverlapping","overlapStartDate","overlapEndDate","differenceInMs","getUnixTime","getWeekYear","_options$locale","_options$locale$optio","startOfWeekYear","getWeek","getWeekOfMonth","currentDayOfMonth","startWeekDay","lastDayOfFirstWeek","weekNumber","remainingDaysAfterFirstWeek","getWeeksInMonth","getYear","hoursToMilliseconds","hoursToMinutes","hoursToSeconds","subDays","subMonths","sub","dateWithoutMonths","dateWithoutDays","minutestoSub","secondstoSub","mstoSub","intervalToDuration","remainingMonths","remainingDays","remainingHours","remainingMinutes","remainingSeconds","intlFormat","formatOrLocale","localeOptions","_localeOptions","formatOptions","isFormatOptions","Intl","DateTimeFormat","opts","isAfter","isBefore","isEqual","dirtyLeftDate","dirtyRightDate","isExists","isFirstDayOfMonth","isFriday","isFuture","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","setUTCISODay","setUTCISOWeek","dirtyISOWeek","setUTCWeek","dirtyWeek","MILLISECONDS_IN_SECOND","numericPatterns","hour23h","hour24h","hour11h","hour12h","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","basicOptionalMinutes","basic","basicOptionalSeconds","extended","extendedOptionalSeconds","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","rangeEndCentury","isPreviousCentury","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","priority","set","flags","incompatibleTokens","isTwoDigitYear","validate","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","subPriority","wholeWeekDays","isPM","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","TIMEZONE_UNIT_PRIORITY","notWhitespaceRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","subFnOptions","setters","dateToSystemTimezone","tokens","usedTokens","parser","incompatibleToken","_i","usedToken","fullToken","uniquePrioritySetters","setter","sort","filter","setterArray","convertedDate","isMatch","isMonday","isPast","startOfHour","isSameHour","dateLeftStartOfHour","dateRightStartOfHour","isSameWeek","dateLeftStartOfWeek","dateRightStartOfWeek","isSameISOWeek","isSameISOWeekYear","dateLeftStartOfYear","dateRightStartOfYear","isSameMinute","dateLeftStartOfMinute","dateRightStartOfMinute","isSameMonth","isSameQuarter","dateLeftStartOfQuarter","dateRightStartOfQuarter","startOfSecond","isSameSecond","dateLeftStartOfSecond","dateRightStartOfSecond","isSameYear","isThisHour","isThisISOWeek","isThisMinute","isThisMonth","isThisQuarter","isThisSecond","isThisWeek","isThisYear","isThursday","isToday","isTomorrow","isTuesday","isWednesday","isWithinInterval","isYesterday","lastDayOfDecade","lastDayOfWeek","lastDayOfISOWeek","lastDayOfISOWeekYear","lastDayOfQuarter","lastDayOfYear","lightFormat","matches","daysInYear","totalDays","totalSeconds","millisecondsToHours","millisecondsToMinutes","millisecondsToSeconds","minutesToHours","minutesToMilliseconds","minutesToSeconds","monthsToQuarters","monthsToYears","nextDay","delta","nextFriday","nextMonday","nextSaturday","nextSunday","nextThursday","nextTuesday","nextWednesday","DEFAULT_ADDITIONAL_DIGITS","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseISO","additionalDigits","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","parseTime","parseTimezone","timeString","substr","exec","regex","captures","century","isWeekDate","parseDateUnit","validateWeekDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","parseTimeUnit","validateTime","parseFloat","timezoneString","validateTimezone","fourthOfJanuaryDay","daysInMonths","_year","_hours","parseJSON","parts","previousDay","previousFriday","previousMonday","previousSaturday","previousSunday","previousThursday","previousTuesday","previousWednesday","quartersToMonths","quartersToYears","roundToNearestMinutes","nearestTo","remainderMinutes","addedMinutes","secondsToHours","secondsToMilliseconds","secondsToMinutes","dirtyMonth","dateWithDesiredMonth","dirtyDayOfMonth","setDay","setDayOfYear","dirtyDayOfYear","dirtyHours","setISODay","setISOWeek","dirtyMilliseconds","dirtyMinutes","setQuarter","dirtyQuarter","oldQuarter","dirtySeconds","setWeek","setWeekYear","dirtyWeekYear","setYear","dirtyYear","startOfDecade","startOfToday","startOfTomorrow","startOfYesterday","subBusinessDays","subHours","subMinutes","subQuarters","subSeconds","subWeeks","subYears","weeksToDays","yearsToMonths","yearsToQuarters","displaySavedLocations","savedLocations","el","convertTZ","tzString","toLocaleString","timeZone","formattedTime","savedLocCard","className","savedLocInnerDiv","savedLocName","savedLocTemp","savedLocTime","dayTime","condition","addEventListener","storeLocations","obj","lat","lon","setItem","stringify","some","obj1","initMap","fields","strictBounds","types","dropdown","google","maps","places","Autocomplete","addListener","place","getPlace","geometry","location","lng","keyCode","preventDefault","setDegree","celcBtn","fahrBtn","remove","locations","refreshSavedLocations","log","searchBtn","toggleLoadding","contains","intervar","setInterval","scrollLeft","clearInterval"],"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I,CAACmF,OAAL,KAAiBoE,OAAO,CAACpE,OAAR,EAAxB;AACD;;;;;;;;;ACfD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS0E,UAAT,CAAoBpE,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,MAAI7E,IAAI,GAAG,oBAAOyF,SAAP,CAAX;AACAzF,EAAAA,IAAI,CAAC+H,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,SAAO/H,IAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA,IAAI8J,mBAAmB,GAAG,QAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,SAASC,wBAAT,CAAkCC,aAAlC,EAAiDC,cAAjD,EAAiE;AAC9E,uBAAa,CAAb,EAAgBpF,SAAhB;AACA,MAAIqF,cAAc,GAAG,qBAAWF,aAAX,CAArB;AACA,MAAIG,eAAe,GAAG,qBAAWF,cAAX,CAAtB;AACA,MAAIG,aAAa,GAAGF,cAAc,CAAC/E,OAAf,KAA2B,oBAAgC+E,cAAhC,CAA/C;AACA,MAAIG,cAAc,GAAGF,eAAe,CAAChF,OAAhB,KAA4B,oBAAgCgF,eAAhC,CAAjD,CAL8E,CAKqB;AACnG;AACA;;AAEA,SAAOvL,IAAI,CAAC0L,KAAL,CAAW,CAACF,aAAa,GAAGC,cAAjB,IAAmCP,mBAA9C,CAAP;AACD;;;;;;;;;ACjDD;;AACA;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASS,cAAT,CAAwB9E,SAAxB,EAAmC+E,gBAAnC,EAAqD;AAClE,uBAAa,CAAb,EAAgB3F,SAAhB;AACA,MAAI7E,IAAI,GAAG,qBAAOyF,SAAP,CAAX;AACA,MAAIgF,WAAW,GAAG,oBAAUD,gBAAV,CAAlB;AACA,MAAI5B,IAAI,GAAG,qBAAyB5I,IAAzB,EAA+B,qBAAmBA,IAAnB,CAA/B,CAAX;AACA,MAAIqJ,eAAe,GAAG,IAAIpJ,IAAJ,CAAS,CAAT,CAAtB;AACAoJ,EAAAA,eAAe,CAACjD,WAAhB,CAA4BqE,WAA5B,EAAyC,CAAzC,EAA4C,CAA5C;AACApB,EAAAA,eAAe,CAACtB,QAAhB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC;AACA/H,EAAAA,IAAI,GAAG,qBAAmBqJ,eAAnB,CAAP;AACArJ,EAAAA,IAAI,CAAC4F,OAAL,CAAa5F,IAAI,CAAC6F,OAAL,KAAiB+C,IAA9B;AACA,SAAO5I,IAAP;AACD;;;;;;;;;AC/CD;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS0K,eAAT,CAAyBjF,SAAzB,EAAoCC,WAApC,EAAiD;AAC9D,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIc,MAAM,GAAG,oBAAUD,WAAV,CAAb;AACA,SAAO,qBAAeD,SAAf,EAA0B,qBAAeA,SAAf,IAA4BE,MAAtD,CAAP;AACD;;;;;;;;;ACtCD;;AACA;;AACA;;;;AACA,IAAIgF,sBAAsB,GAAG,KAA7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,SAASC,UAAT,CAAoBnF,SAApB,EAA+BC,WAA/B,EAA4C;AACzD,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIc,MAAM,GAAG,oBAAUD,WAAV,CAAb;AACA,SAAO,qBAAgBD,SAAhB,EAA2BE,MAAM,GAAGgF,sBAApC,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASE,WAAT,CAAqBpF,SAArB,EAAgCC,WAAhC,EAA6C;AAC1D,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIc,MAAM,GAAG,oBAAUD,WAAV,CAAb;AACA,MAAIc,MAAM,GAAGb,MAAM,GAAG,CAAtB;AACA,SAAO,qBAAUF,SAAV,EAAqBe,MAArB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASsE,UAAT,CAAoBrF,SAApB,EAA+BC,WAA/B,EAA4C;AACzD,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIc,MAAM,GAAG,oBAAUD,WAAV,CAAb;AACA,SAAO,qBAAgBD,SAAhB,EAA2BE,MAAM,GAAG,IAApC,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASoF,QAAT,CAAkBtF,SAAlB,EAA6BC,WAA7B,EAA0C;AACvD,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIc,MAAM,GAAG,oBAAUD,WAAV,CAAb;AACA,MAAIgB,IAAI,GAAGf,MAAM,GAAG,CAApB;AACA,SAAO,qBAAQF,SAAR,EAAmBiB,IAAnB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASsE,QAAT,CAAkBvF,SAAlB,EAA6BC,WAA7B,EAA0C;AACvD,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIc,MAAM,GAAG,oBAAUD,WAAV,CAAb;AACA,SAAO,qBAAUD,SAAV,EAAqBE,MAAM,GAAG,EAA9B,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASsF,uBAAT,CAAiCC,iBAAjC,EAAoDC,kBAApD,EAAwE;AACrF,MAAI7C,OAAO,GAAGzD,SAAS,CAACJ,MAAV,GAAmB,CAAnB,IAAwBI,SAAS,CAAC,CAAD,CAAT,KAAiBuG,SAAzC,GAAqDvG,SAAS,CAAC,CAAD,CAA9D,GAAoE;AAChFwG,IAAAA,SAAS,EAAE;AADqE,GAAlF;AAGA,uBAAa,CAAb,EAAgBxG,SAAhB;AACA,MAAIyG,YAAY,GAAGJ,iBAAiB,IAAI,EAAxC;AACA,MAAIK,aAAa,GAAGJ,kBAAkB,IAAI,EAA1C;AACA,MAAIK,aAAa,GAAG,oBAAOF,YAAY,CAACG,KAApB,EAA2BtG,OAA3B,EAApB;AACA,MAAIuG,WAAW,GAAG,oBAAOJ,YAAY,CAACK,GAApB,EAAyBxG,OAAzB,EAAlB;AACA,MAAIyG,cAAc,GAAG,oBAAOL,aAAa,CAACE,KAArB,EAA4BtG,OAA5B,EAArB;AACA,MAAI0G,YAAY,GAAG,oBAAON,aAAa,CAACI,GAArB,EAA0BxG,OAA1B,EAAnB,CAVqF,CAU7B;;AAExD,MAAI,EAAEqG,aAAa,IAAIE,WAAjB,IAAgCE,cAAc,IAAIC,YAApD,CAAJ,EAAuE;AACrE,UAAM,IAAIlD,UAAJ,CAAe,kBAAf,CAAN;AACD;;AAED,MAAIL,OAAO,CAAC+C,SAAZ,EAAuB;AACrB,WAAOG,aAAa,IAAIK,YAAjB,IAAiCD,cAAc,IAAIF,WAA1D;AACD;;AAED,SAAOF,aAAa,GAAGK,YAAhB,IAAgCD,cAAc,GAAGF,WAAxD;AACD;;;;;;;;;ACjHD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASxM,GAAT,CAAa4M,eAAb,EAA8B;AAC3C,uBAAa,CAAb,EAAgBjH,SAAhB;AACA,MAAIkH,UAAJ,CAF2C,CAE3B;;AAEhB,MAAID,eAAe,IAAI,OAAOA,eAAe,CAAChM,OAAvB,KAAmC,UAA1D,EAAsE;AACpEiM,IAAAA,UAAU,GAAGD,eAAb,CADoE,CACtC;AAC/B,GAFD,MAEO,IAAI,OAAOA,eAAP,KAA2B,QAA3B,IAAuCA,eAAe,KAAK,IAA/D,EAAqE;AAC1EC,IAAAA,UAAU,GAAGC,KAAK,CAAChH,SAAN,CAAgBiH,KAAhB,CAAsB/G,IAAtB,CAA2B4G,eAA3B,CAAb;AACD,GAFM,MAEA;AACL;AACA,WAAO,IAAI7L,IAAJ,CAASiE,GAAT,CAAP;AACD;;AAED,MAAIgI,MAAJ;AACAH,EAAAA,UAAU,CAACjM,OAAX,CAAmB,UAAU2F,SAAV,EAAqB;AACtC,QAAI0G,WAAW,GAAG,oBAAO1G,SAAP,CAAlB;;AAEA,QAAIyG,MAAM,KAAKd,SAAX,IAAwBc,MAAM,GAAGC,WAAjC,IAAgD9H,KAAK,CAACD,MAAM,CAAC+H,WAAD,CAAP,CAAzD,EAAgF;AAC9ED,MAAAA,MAAM,GAAGC,WAAT;AACD;AACF,GAND;AAOA,SAAOD,MAAM,IAAI,IAAIjM,IAAJ,CAASiE,GAAT,CAAjB;AACD;;;;;;;;;AChED;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASjF,GAAT,CAAa6M,eAAb,EAA8B;AAC3C,uBAAa,CAAb,EAAgBjH,SAAhB;AACA,MAAIkH,UAAJ,CAF2C,CAE3B;;AAEhB,MAAID,eAAe,IAAI,OAAOA,eAAe,CAAChM,OAAvB,KAAmC,UAA1D,EAAsE;AACpEiM,IAAAA,UAAU,GAAGD,eAAb,CADoE,CACtC;AAC/B,GAFD,MAEO,IAAI,OAAOA,eAAP,KAA2B,QAA3B,IAAuCA,eAAe,KAAK,IAA/D,EAAqE;AAC1EC,IAAAA,UAAU,GAAGC,KAAK,CAAChH,SAAN,CAAgBiH,KAAhB,CAAsB/G,IAAtB,CAA2B4G,eAA3B,CAAb;AACD,GAFM,MAEA;AACL;AACA,WAAO,IAAI7L,IAAJ,CAASiE,GAAT,CAAP;AACD;;AAED,MAAIgI,MAAJ;AACAH,EAAAA,UAAU,CAACjM,OAAX,CAAmB,UAAU2F,SAAV,EAAqB;AACtC,QAAI0G,WAAW,GAAG,oBAAO1G,SAAP,CAAlB;;AAEA,QAAIyG,MAAM,KAAKd,SAAX,IAAwBc,MAAM,GAAGC,WAAjC,IAAgD9H,KAAK,CAAC8H,WAAW,CAACtG,OAAZ,EAAD,CAAzD,EAAkF;AAChFqG,MAAAA,MAAM,GAAGC,WAAT;AACD;AACF,GAND;AAOA,SAAOD,MAAM,IAAI,IAAIjM,IAAJ,CAASiE,GAAT,CAAjB;AACD;;;;;;;;;AChED;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASkI,KAAT,CAAepM,IAAf,EAAqBqM,IAArB,EAA2B;AACxC,MAAIZ,KAAK,GAAGY,IAAI,CAACZ,KAAjB;AAAA,MACIE,GAAG,GAAGU,IAAI,CAACV,GADf;AAEA,uBAAa,CAAb,EAAgB9G,SAAhB;AACA,SAAO,qBAAI,CAAC,oBAAI,CAAC7E,IAAD,EAAOyL,KAAP,CAAJ,CAAD,EAAqBE,GAArB,CAAJ,CAAP;AACD;;;;;;;;;ACnCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASW,cAAT,CAAwBC,kBAAxB,EAA4CT,eAA5C,EAA6D;AAC1E,uBAAa,CAAb,EAAgBjH,SAAhB;AACA,MAAI2H,aAAa,GAAG,oBAAOD,kBAAP,CAApB;;AAEA,MAAIlI,KAAK,CAACmI,aAAD,CAAT,EAA0B;AACxB,WAAOtI,GAAP;AACD;;AAED,MAAIuI,aAAa,GAAGD,aAAa,CAACrH,OAAd,EAApB;AACA,MAAI4G,UAAJ,CAT0E,CAS1D;;AAEhB,MAAID,eAAe,IAAI,IAAvB,EAA6B;AAC3BC,IAAAA,UAAU,GAAG,EAAb,CAD2B,CACV;AAClB,GAFD,MAEO,IAAI,OAAOD,eAAe,CAAChM,OAAvB,KAAmC,UAAvC,EAAmD;AACxDiM,IAAAA,UAAU,GAAGD,eAAb,CADwD,CAC1B;AAC/B,GAFM,MAEA;AACLC,IAAAA,UAAU,GAAGC,KAAK,CAAChH,SAAN,CAAgBiH,KAAhB,CAAsB/G,IAAtB,CAA2B4G,eAA3B,CAAb;AACD;;AAED,MAAII,MAAJ;AACA,MAAIQ,WAAJ;AACAX,EAAAA,UAAU,CAACjM,OAAX,CAAmB,UAAU2F,SAAV,EAAqBkH,KAArB,EAA4B;AAC7C,QAAIR,WAAW,GAAG,oBAAO1G,SAAP,CAAlB;;AAEA,QAAIpB,KAAK,CAAC8H,WAAD,CAAT,EAAwB;AACtBD,MAAAA,MAAM,GAAGhI,GAAT;AACAwI,MAAAA,WAAW,GAAGxI,GAAd;AACA;AACD;;AAED,QAAI0I,QAAQ,GAAGhO,IAAI,CAACkJ,GAAL,CAAS2E,aAAa,GAAGN,WAAW,CAAChH,OAAZ,EAAzB,CAAf;;AAEA,QAAI+G,MAAM,IAAI,IAAV,IAAkBU,QAAQ,GAAGF,WAAjC,EAA8C;AAC5CR,MAAAA,MAAM,GAAGS,KAAT;AACAD,MAAAA,WAAW,GAAGE,QAAd;AACD;AACF,GAfD;AAgBA,SAAOV,MAAP;AACD;;;;;;;;;ACxED;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASW,SAAT,CAAmBN,kBAAnB,EAAuCT,eAAvC,EAAwD;AACrE,uBAAa,CAAb,EAAgBjH,SAAhB;AACA,MAAI2H,aAAa,GAAG,oBAAOD,kBAAP,CAApB;;AAEA,MAAIlI,KAAK,CAACmI,aAAD,CAAT,EAA0B;AACxB,WAAO,IAAIvM,IAAJ,CAASiE,GAAT,CAAP;AACD;;AAED,MAAIuI,aAAa,GAAGD,aAAa,CAACrH,OAAd,EAApB;AACA,MAAI4G,UAAJ,CATqE,CASrD;;AAEhB,MAAID,eAAe,IAAI,IAAvB,EAA6B;AAC3BC,IAAAA,UAAU,GAAG,EAAb,CAD2B,CACV;AAClB,GAFD,MAEO,IAAI,OAAOD,eAAe,CAAChM,OAAvB,KAAmC,UAAvC,EAAmD;AACxDiM,IAAAA,UAAU,GAAGD,eAAb,CADwD,CAC1B;AAC/B,GAFM,MAEA;AACLC,IAAAA,UAAU,GAAGC,KAAK,CAAChH,SAAN,CAAgBiH,KAAhB,CAAsB/G,IAAtB,CAA2B4G,eAA3B,CAAb;AACD;;AAED,MAAII,MAAJ;AACA,MAAIQ,WAAJ;AACAX,EAAAA,UAAU,CAACjM,OAAX,CAAmB,UAAU2F,SAAV,EAAqB;AACtC,QAAI0G,WAAW,GAAG,oBAAO1G,SAAP,CAAlB;;AAEA,QAAIpB,KAAK,CAAC8H,WAAD,CAAT,EAAwB;AACtBD,MAAAA,MAAM,GAAG,IAAIjM,IAAJ,CAASiE,GAAT,CAAT;AACAwI,MAAAA,WAAW,GAAGxI,GAAd;AACA;AACD;;AAED,QAAI0I,QAAQ,GAAGhO,IAAI,CAACkJ,GAAL,CAAS2E,aAAa,GAAGN,WAAW,CAAChH,OAAZ,EAAzB,CAAf;;AAEA,QAAI+G,MAAM,IAAI,IAAV,IAAkBU,QAAQ,GAAGF,WAAjC,EAA8C;AAC5CR,MAAAA,MAAM,GAAGC,WAAT;AACAO,MAAAA,WAAW,GAAGE,QAAd;AACD;AACF,GAfD;AAgBA,SAAOV,MAAP;AACD;;;;;;;;;ACtED;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASY,UAAT,CAAoB9C,aAApB,EAAmCC,cAAnC,EAAmD;AAChE,uBAAa,CAAb,EAAgBpF,SAAhB;AACA,MAAIkI,QAAQ,GAAG,oBAAO/C,aAAP,CAAf;AACA,MAAIgD,SAAS,GAAG,oBAAO/C,cAAP,CAAhB;AACA,MAAIrB,IAAI,GAAGmE,QAAQ,CAAC5H,OAAT,KAAqB6H,SAAS,CAAC7H,OAAV,EAAhC;;AAEA,MAAIyD,IAAI,GAAG,CAAX,EAAc;AACZ,WAAO,CAAC,CAAR;AACD,GAFD,MAEO,IAAIA,IAAI,GAAG,CAAX,EAAc;AACnB,WAAO,CAAP,CADmB,CACT;AACX,GAFM,MAEA;AACL,WAAOA,IAAP;AACD;AACF;;;;;;;;;ACpDD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASqE,WAAT,CAAqBjD,aAArB,EAAoCC,cAApC,EAAoD;AACjE,uBAAa,CAAb,EAAgBpF,SAAhB;AACA,MAAIkI,QAAQ,GAAG,oBAAO/C,aAAP,CAAf;AACA,MAAIgD,SAAS,GAAG,oBAAO/C,cAAP,CAAhB;AACA,MAAIrB,IAAI,GAAGmE,QAAQ,CAAC5H,OAAT,KAAqB6H,SAAS,CAAC7H,OAAV,EAAhC;;AAEA,MAAIyD,IAAI,GAAG,CAAX,EAAc;AACZ,WAAO,CAAC,CAAR;AACD,GAFD,MAEO,IAAIA,IAAI,GAAG,CAAX,EAAc;AACnB,WAAO,CAAP,CADmB,CACT;AACX,GAFM,MAEA;AACL,WAAOA,IAAP;AACD;AACF;;;;;;;;;ACpDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAIsE,UAAU,GAAG,CAAjB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,IAAIC,OAAO,GAAGvO,IAAI,CAACwO,GAAL,CAAS,EAAT,EAAa,CAAb,IAAkB,EAAlB,GAAuB,EAAvB,GAA4B,EAA5B,GAAiC,IAA/C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,IAAIC,oBAAoB,GAAG,KAA3B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,IAAIC,kBAAkB,GAAG,OAAzB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,IAAIC,oBAAoB,GAAG,IAA3B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,IAAIC,OAAO,GAAG,CAACL,OAAf;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,IAAIM,aAAa,GAAG,EAApB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,IAAIC,eAAe,GAAG,CAAtB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,IAAIC,YAAY,GAAG,EAAnB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,IAAIC,cAAc,GAAG,CAArB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,IAAIC,aAAa,GAAG,IAApB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,IAAIC,eAAe,GAAG,EAAtB;;;;;;;;;;ACtHP;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASC,WAAT,CAAqBrH,IAArB,EAA2B;AACxC,sBAAa,CAAb,EAAgB7B,SAAhB;AACA,MAAI4B,KAAK,GAAGC,IAAI,GAAGwG,kBAAnB;AACA,SAAOtO,IAAI,CAACC,KAAL,CAAW4H,KAAX,CAAP;AACD;;;;;;;;;AC9BD;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASuH,MAAT,CAAgBC,KAAhB,EAAuB;AACpC,sBAAa,CAAb,EAAgBpJ,SAAhB;AACA,SAAOoJ,KAAK,YAAYhO,IAAjB,IAAyB,OAAOgO,KAAP,KAAiB,QAAjB,IAA6BlJ,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+B+I,KAA/B,MAA0C,eAAvG;AACD;;;;;;;;;ACzCD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASC,OAAT,CAAiBzI,SAAjB,EAA4B;AACzC,uBAAa,CAAb,EAAgBZ,SAAhB;;AAEA,MAAI,CAAC,oBAAOY,SAAP,CAAD,IAAsB,OAAOA,SAAP,KAAqB,QAA/C,EAAyD;AACvD,WAAO,KA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,EAA4FvH,IAA5F,CAAP;AACD;;;;;;;;;AChCD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASmI,mBAAT,CAA6BhE,QAA7B,EAAuCC,SAAvC,EAAkD1E,OAAlD,EAA2D;AACxE,uBAAa,CAAb,EAAgBzD,SAAhB;AACA,MAAI+D,IAAI,GAAG,oBAAyBmE,QAAzB,EAAmCC,SAAnC,IAAgD,IAA3D;AACA,SAAO,+BAAkB1E,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAAC6H,cAA5E,EAA4FvH,IAA5F,CAAP;AACD;;;;;;;;;ACpCD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASoI,iBAAT,CAA2BjE,QAA3B,EAAqCC,SAArC,EAAgD1E,OAAhD,EAAyD;AACtE,uBAAa,CAAb,EAAgBzD,SAAhB;AACA,MAAI+D,IAAI,GAAG,oBAAiBmE,QAAjB,EAA2BC,SAA3B,IAAwC,CAAnD;AACA,SAAO,+BAAkB1E,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAAC6H,cAA5E,EAA4FvH,IAA5F,CAAP;AACD;;;;;;;;;ACrDD;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASqI,iBAAT,CAA2BjH,aAA3B,EAA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AAiCjP,MAAjC,EAAyCoe,eAAzC,CAAzG,CAF2B,CAEyI;AACrK,GAHM,MAGA,IAAI3F,IAAI,KAAK,MAAb,EAAqB;AAC1B,QAAI1Y,KAAK,GAAG6e,gBAAgB,CAACC,oBAAoB,GAAGH,eAAxB,CAA5B;AACA,WAAO3c,MAAM,CAACkN,cAAP,CAAsB,QAAtB,EAAgClP,KAAhC,EAAuCqe,eAAvC,CAAP;AACD;;AAED,QAAM,IAAIjc,UAAJ,CAAe,mEAAf,CAAN;AACD;;;;;;;;;AC3PD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS4c,mBAAT,CAA6B9f,SAA7B,EAAwC4C,YAAxC,EAAsD;AACnE,uBAAa,CAAb,EAAgBxD,SAAhB;AACA,SAAO,oBAAgBY,SAAhB,EAA2BxF,IAAI,CAACkU,GAAL,EAA3B,EAAuC9L,YAAvC,CAAP;AACD;;;;;;;;;AC/GD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASmd,yBAAT,CAAmC/f,SAAnC,EAA8C4C,YAA9C,EAA4D;AACzE,uBAAa,CAAb,EAAgBxD,SAAhB;AACA,SAAO,oBAAqBY,SAArB,EAAgCxF,IAAI,CAACkU,GAAL,EAAhC,EAA4C9L,YAA5C,CAAP;AACD;;;;;;;;;AChFD;;;;AACA,IAAIod,aAAa,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,MAA7B,EAAqC,OAArC,EAA8C,SAA9C,EAAyD,SAAzD,CAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,SAASC,cAAT,CAAwBpf,QAAxB,EAAkCgC,OAAlC,EAA2C;AACxD,MAAIzD,SAAS,CAACJ,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,iCAAiCse,MAAjC,CAAwCne,SAAS,CAACJ,MAAlD,EAA0D,UAA1D,CAAd,CAAN;AACD;;AAED,MAAI2R,MAAM,GAAG,CAAC9N,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAAC8N,MAA3D,KAAsEqP,aAAnF;AACA,MAAIld,MAAM,GAAG,CAACD,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASjU,UAAT,CAAoBhE,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,MAAI7E,IAAI,GAAG,oBAAOyF,SAAP,CAAX;AACA,MAAImB,OAAO,GAAG5G,IAAI,CAACyJ,UAAL,EAAd;AACA,SAAO7C,OAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASV,QAAT,CAAkBT,SAAlB,EAA6B;AAC1C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,MAAI7E,IAAI,GAAG,oBAAOyF,SAAP,CAAX;AACA,MAAIiL,KAAK,GAAG1Q,IAAI,CAACkG,QAAL,EAAZ;AACA,SAAOwK,KAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA,IAAI5G,mBAAmB,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAAzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,SAAS8e,6BAAT,CAAuC1d,iBAAvC,EAA0DC,kBAA1D,EAA8E;AAC3F,uBAAa,CAAb,EAAgBtG,SAAhB;AACA,MAAIyG,YAAY,GAAGJ,iBAAiB,IAAI,EAAxC;AACA,MAAIK,aAAa,GAAGJ,kBAAkB,IAAI,EAA1C;AACA,MAAIK,aAAa,GAAG,oBAAOF,YAAY,CAACG,KAApB,EAA2BtG,OAA3B,EAApB;AACA,MAAIuG,WAAW,GAAG,oB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B,EAAgD,qBAAaA,IAAb,CAAhD,EAAoEsI,OAApE,IAA+E,CAAtF;AACD;;;;;;;;;ACvCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASwhB,OAAT,CAAiBrkB,SAAjB,EAA4B;AACzC,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,MAAI7E,IAAI,GAAG,oBAAOyF,SAAP,CAAX;AACA,MAAIsD,IAAI,GAAG/I,IAAI,CAACqG,WAAL,EAAX;AACA,SAAO0C,IAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASghB,mBAAT,CAA6BpjB,KAA7B,EAAoC;AACjD,sBAAa,CAAb,EAAgB9B,SAAhB;AACA,SAAOjG,IAAI,CAACC,KAAL,CAAW8H,KAAK,GAAG2G,0BAAnB,CAAP;AACD;;;;;;;;;ACxBD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS0c,cAAT,CAAwBrjB,KAAxB,EAA+B;AAC5C,sBAAa,CAAb,EAAgB9B,SAAhB;AACA,SAAOjG,IAAI,CAACC,KAAL,CAAW8H,KAAK,GAAG8G,qBAAnB,CAAP;AACD;;;;;;;;;ACxBD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASwc,cAAT,CAAwBtjB,KAAxB,EAA+B;AAC5C,sBAAa,CAAb,EAAgB9B,SAAhB;AACA,SAAOjG,IAAI,CAACC,KAAL,CAAW8H,KAAK,GAAGkH,qBAAnB,CAAP;AACD;;;;;;;;;ACxBD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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O,qBAAQ,oBAAM+rB,UAAN,EAAkBC,YAAlB,EAAgC,IAAI5wB,IAAJ,EAAhC,EAA4CqI,OAA5C,CAAR,CAAP;AACD;;;;;;;;;AC3SD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASypB,QAAT,CAAkB/xB,IAAlB,EAAwB;AACrC,uBAAa,CAAb,EAAgB6E,SAAhB;AACA,SAAO,oBAAO7E,IAAP,EAAaqH,MAAb,OAA0B,CAAjC;AACD;;;;;;;;;AC3BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS2qB,MAAT,CAAgBvsB,SAAhB,EAA2B;AACxC,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,SAAO,oBAAOY,SAAP,EAAkBN,OAAlB,KAA8BlF,IAAI,CAACkU,GAAL,EAArC;AACD;;;;;;;;;AC/BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS8d,WAAT,CAAqBxsB,SAArB,EAAgC;AAC7C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,MAAI7E,IAAI,GAAG,oBAAOyF,SAAP,CAAX;AACAzF,EAAAA,IAAI,CAAC8R,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB;AACA,SAAO9R,IAAP;AACD;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASkyB,UAAT,CAAoBloB,aAApB,EAAmCC,cAAnC,EAAmD;AAChE,uBAAa,CAAb,EAAgBpF,SAAhB;AACA,MAAIstB,mBAAmB,GAAG,oBAAYnoB,aAAZ,CAA1B;AACA,MAAIooB,oBAAoB,GAAG,oBAAYnoB,cAAZ,CAA3B;AACA,SAAOkoB,mBAAmB,CAAChtB,OAApB,OAAkCitB,oBAAoB,CAACjtB,OAArB,EAAzC;AACD;;;;;;;;;AC9BD;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASktB,UAAT,CAAoBroB,aAApB,EAAmCC,cAAnC,EAAmD5B,YAAnD,EAAiE;AAC9E,uBAAa,CAAb,EAAgBxD,SAAhB;AACA,MAAIytB,mBAAmB,GAAG,oBAAYtoB,aAAZ,EAA2B3B,YAA3B,CAA1B;AACA,MAAIkqB,oBAAoB,GAAG,oBAAYtoB,cAAZ,EAA4B5B,YAA5B,CAA3B;AACA,SAAOiqB,mBAAmB,CAACntB,OAApB,OAAkCotB,oBAAoB,CAACptB,OAArB,EAAzC;AACD;;;;;;;;;AC1CD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASqtB,aAAT,CAAuBxoB,aAAvB,EAAsCC,cAAtC,EAAsD;AACnE,uBAAa,CAAb,EAAgBpF,SAAhB;AACA,SAAO,oBAAWmF,aAAX,EAA0BC,cAA1B,EAA0C;AAC/CxB,IAAAA,YAAY,EAAE;AADiC,GAA1C,CAAP;AAGD;;;;;;;;;AChCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASgqB,iBAAT,CAA2BzoB,aAA3B,EAA0CC,cAA1C,EAA0D;AACvE,uBAAa,CAAb,EAAgBpF,SAAhB;AACA,MAAI6tB,m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,CAAC3G,WAAV,EAAlC;AACD;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASmtB,UAAT,CAAoB/tB,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,SAAO,oBAAW5E,IAAI,CAACkU,GAAL,EAAX,EAAuB1O,SAAvB,CAAP;AACD;;;;;;;;;AChCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASguB,aAAT,CAAuBhuB,SAAvB,EAAkC;AAC/C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,SAAO,oBAAcY,SAAd,EAAyBxF,IAAI,CAACkU,GAAL,EAAzB,CAAP;AACD;;;;;;;;;ACjCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASuf,YAAT,CAAsBjuB,SAAtB,EAAiC;AAC9C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,SAAO,oBAAa5E,IAAI,CAACkU,GAAL,EAAb,EAAyB1O,SAAzB,CAAP;AACD;;;;;;;;;AChCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASkuB,WAAT,CAAqBluB,SAArB,EAAgC;AAC7C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,SAAO,oBAAY5E,IAAI,CAACkU,GAAL,EAAZ,EAAwB1O,SAAxB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASmuB,aAAT,CAAuBnuB,SAAvB,EAAkC;AAC/C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,SAAO,oBAAc5E,IAAI,CAACkU,GAAL,EAAd,EAA0B1O,SAA1B,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASouB,YAAT,CAAsBpuB,SAAtB,EAAiC;AAC9C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,SAAO,oBAAa5E,IAAI,CAACkU,GAAL,EAAb,EAAyB1O,SAAzB,CAAP;AACD;;;;;;;;;AChCD;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASquB,UAAT,CAAoBruB,SAApB,EAA+B6C,OAA/B,EAAwC;AACrD,uBAAa,CAAb,EAAgBzD,SAAhB;AACA,SAAO,oBAAWY,SAAX,EAAsBxF,IAAI,CAACkU,GAAL,EAAtB,EAAkC7L,OAAlC,CAAP;AACD;;;;;;;;;ACzCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASyrB,UAAT,CAAoBtuB,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,SAAO,oBAAWY,SAAX,EAAsBxF,IAAI,CAACkU,GAAL,EAAtB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS6f,UAAT,CAAoBvuB,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,SAAO,oBAAOY,SAAP,EAAkB4B,MAAlB,OAA+B,CAAtC;AACD;;;;;;;;;AC3BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS4sB,OAAT,CAAiBxuB,SAAjB,EAA4B;AACzC,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,SAAO,oBAAUY,SAAV,EAAqBxF,IAAI,CAACkU,GAAL,EAArB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS+f,UAAT,CAAoBzuB,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,SAAO,qBAAUY,SAAV,EAAqB,oBAAQxF,IAAI,CAACkU,GAAL,EAAR,EAAoB,CAApB,CAArB,CAAP;AACD;;;;;;;;;AChCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASggB,SAAT,CAAmB1uB,SAAnB,EAA8B;AAC3C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,SAAO,oBAAOY,SAAP,EAAkB4B,MAAlB,OAA+B,CAAtC;AACD;;;;;;;;;AC3BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS+sB,WAAT,CAAqB3uB,SAArB,EAAgC;AAC7C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,SAAO,oBAAOY,SAAP,EAAkB4B,MAAlB,OAA+B,CAAtC;AACD;;;;;;;;;AC3BD;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASgtB,gBAAT,CAA0B5uB,SAA1B,EAAqC4L,QAArC,EAA+C;AAC5D,uBAAa,CAAb,EAAgBxM,SAAhB;AACA,MAAIzE,IAAI,GAAG,oBAAOqF,SAAP,EAAkBN,OAAlB,EAAX;AACA,MAAI0M,SAAS,GAAG,oBAAOR,QAAQ,CAAC5F,KAAhB,EAAuBtG,OAAvB,EAAhB;AACA,MAAIqM,OAAO,GAAG,oBAAOH,QAAQ,CAAC1F,GAAhB,EAAqBxG,OAArB,EAAd,CAJ4D,CAId;;AAE9C,MAAI,EAAE0M,SAAS,IAAIL,OAAf,CAAJ,EAA6B;AAC3B,UAAM,IAAI7I,UAAJ,CAAe,kBAAf,CAAN;AACD;;AAED,SAAOvI,IAAI,IAAIyR,SAAR,IAAqBzR,IAAI,IAAIoR,OAApC;AACD;;;;;;;;;ACvFD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS8iB,WAAT,CAAqB7uB,SAArB,EAAgC;AAC7C,uBAAa,CAAb,EAAgBZ,SAAhB;AACA,SAAO,oBAAUY,SAAV,EAAqB,qBAAQxF,IAAI,CAACkU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;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASijB,aAAT,CAAuBjvB,MAAvB,EAA+B;AAC5C,sBAAa,CAAb,EAAgB3B,SAAhB;AACA,MAAI0B,KAAK,GAAGC,MAAM,GAAGmH,oBAArB;AACA,SAAO/O,IAAI,CAACC,KAAL,CAAW0H,KAAX,CAAP;AACD;;;;;;;;;AC7BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASmvB,OAAT,CAAiB11B,IAAjB,EAAuBiB,GAAvB,EAA4B;AACzC,uBAAa,CAAb,EAAgB4D,SAAhB;AACA,MAAI8wB,KAAK,GAAG10B,GAAG,GAAG,qBAAOjB,IAAP,CAAlB;AACA,MAAI21B,KAAK,IAAI,CAAb,EAAgBA,KAAK,IAAI,CAAT;AAChB,SAAO,oBAAQ31B,IAAR,EAAc21B,KAAd,CAAP;AACD;;;;;;;;;AChCD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASC,UAAT,CAAoB51B,IAApB,EAA0B;AACvC,sBAAa,CAAb,EAAgB6E,SAAhB;AACA,SAAO,qBAAQ,qBAAO7E,IAAP,CAAR,EAAsB,CAAtB,CAAP;AACD;;;;;;;;;ACxBD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS61B,UAAT,CAAoB71B,IAApB,EAA0B;AACvC,sBAAa,CAAb,EAAgB6E,SAAhB;AACA,SAAO,qBAAQ,qBAAO7E,IAAP,CAAR,EAAsB,CAAtB,CAAP;AACD;;;;;;;;;ACxBD;;AACA;;AACA;;;;AACA;AACA;AACA;A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vBD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASg5B,cAAT,CAAwBh5B,IAAxB,EAA8B;AAC3C,sBAAa,CAAb,EAAgB6E,SAAhB;AACA,SAAO,qBAAY7E,IAAZ,EAAkB,CAAlB,CAAP;AACD;;;;;;;;;ACvBD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASi5B,gBAAT,CAA0Bj5B,IAA1B,EAAgC;AAC7C,sBAAa,CAAb,EAAgB6E,SAAhB;AACA,SAAO,qBAAY7E,IAAZ,EAAkB,CAAlB,CAAP;AACD;;;;;;;;;ACvBD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASk5B,eAAT,CAAyBl5B,IAAzB,EAA+B;AAC5C,sBAAa,CAAb,EAAgB6E,SAAhB;AACA,SAAO,qBAAY7E,IAAZ,EAAkB,CAAlB,CAAP;AACD;;;;;;;;;ACvBD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASm5B,iBAAT,CAA2Bn5B,IAA3B,EAAiC;AAC9C,sBAAa,CAAb,EAAgB6E,SAAhB;AACA,SAAO,qBAAY7E,IAAZ,EAAkB,CAAlB,CAAP;AACD;;;;;;;;;ACvBD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASo5B,gBAAT,CAA0B5mB,QAA1B,EAAoC;AACjD,sBAAa,CAAb,EAAgB3N,SAAhB;AACA,SAAOjG,IAAI,CAACC,KAAL,CAAW2T,QAAQ,GAAG9E,uBAAtB,CAAP;AACD;;;;;;;;;ACxBD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS2rB,eAAT,CAAyB7mB,QAAzB,EAAmC;AAChD,sBAAa,CAAb,EAAgB3N,SAAhB;AACA,MAAI0B,KAAK,GAAGiM,QAAQ,GAAG5E,sBAAvB;AACA,SAAOhP,IAAI,CAACC,KAAL,CAAW0H,KAAX,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS+yB,qBAAT,CAA+B7zB,SAA/B,EAA0C6C,OAA1C,EAAmD;AAChE,MAAIzD,SAAS,CAACJ,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,qDAAd,CAAN;AACD;;AAED,MAAI60B,SAAS,GAAGjxB,OAAO,IAAI,eAAeA,OAA1B,GAAoC,qBAAUA,OAAO,CAACixB,SAAlB,CAApC,GAAmE,CAAnF;;AAEA,MAAIA,SAAS,GAAG,CAAZ,IAAiBA,SAAS,GAAG,EAAjC,EAAqC;AACnC,UAAM,IAAI5wB,UAAJ,CAAe,8CAAf,CAAN;AACD;;AAED,MAAI3I,IAAI,GAAG,oBAAOyF,SAAP,CAAX;AACA,MAAIoB,OAAO,GAAG7G,IAAI,CAAC0J,UAAL,EAAd,CAZgE,CAY/B;;AAEjC,MAAI9C,OAAO,GAAG5G,IAAI,CAACyJ,UAAL,KAAoB5C,OAAO,GAAG,EAA5C;AACA,MAAIye,cAAc,GAAG1mB,IAAI,CAACC,KAAL,CAAW+H,OAAO,GAAG2yB,SAArB,IAAkCA,SAAvD;AACA,MAAIC,gBAAgB,GAAG5yB,OAAO,GAAG2yB,SAAjC;AACA,MAAIE,YAAY,GAAG76B,IAAI,CAAC0L,KAAL,CAAWkvB,gBAAgB,GAAGD,SAA9B,IAA2CA,SAA9D;AACA,SAAO,IAAIt5B,IAAJ,CAASD,IAAI,CAACqG,WAAL,EAAT,EAA6BrG,IAAI,CAACkG,QAAL,EAA7B,EAA8ClG,IAAI,CAAC6F,OAAL,EAA9C,EAA8D7F,IAAI,CAAC0H,QAAL,EAA9D,EAA+E4d,cAAc,GAAGmU,YAAhG,CAAP;AACD;;;;;;;;;ACrDD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASC,cAAT,CAAwB7yB,OAAxB,EAAiC;AAC9C,sBAAa,CAAb,EAAgBhC,SAAhB;AACA,MAAI8B,KAAK,GAAGE,OAAO,GAAGgH,qBAAtB;AACA,SAAOjP,IAAI,CAACC,KAAL,CAAW8H,KAAX,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASgzB,qBAAT,CAA+B9yB,OAA/B,EAAwC;AACrD,sBAAa,CAAb,EAAgBhC,SAAhB;AACA,SAAOgC,OAAO,GAAG0G,4BAAjB;AACD;;;;;;;;;ACxBD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASqsB,gBAAT,CAA0B/yB,OAA1B,EAAmC;AAChD,sBAAa,CAAb,EAAgBhC,SAAhB;AACA,MAAI+B,OAAO,GAAGC,OAAO,GAAGiH,uBAAxB;AACA,SAAOlP,IAAI,CAACC,KAAL,CAAW+H,OAAX,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASX,QAAT,CAAkBR,SAAlB,EAA6Bo0B,UAA7B,EAAyC;AACtD,uBAAa,CAAb,EAAgBh1B,SAAhB;AACA,MAAI7E,IAAI,GAAG,qBAAOyF,SAAP,CAAX;AACA,MA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L,OAAhB;AACA,SAAO5G,IAAP;AACD;;;;;;;;;AChCD;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASw6B,UAAT,CAAoB/0B,SAApB,EAA+Bg1B,YAA/B,EAA6C;AAC1D,uBAAa,CAAb,EAAgB51B,SAAhB;AACA,MAAI7E,IAAI,GAAG,qBAAOyF,SAAP,CAAX;AACA,MAAIwJ,OAAO,GAAG,oBAAUwrB,YAAV,CAAd;AACA,MAAIC,UAAU,GAAG97B,IAAI,CAACC,KAAL,CAAWmB,IAAI,CAACkG,QAAL,KAAkB,CAA7B,IAAkC,CAAnD;AACA,MAAI0C,IAAI,GAAGqG,OAAO,GAAGyrB,UAArB;AACA,SAAO,qBAAS16B,IAAT,EAAeA,IAAI,CAACkG,QAAL,KAAkB0C,IAAI,GAAG,CAAxC,CAAP;AACD;;;;;;;;;AClCD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASoJ,UAAT,CAAoBvM,SAApB,EAA+Bk1B,YAA/B,EAA6C;AAC1D,uBAAa,CAAb,EAAgB91B,SAAhB;AACA,MAAI7E,IAAI,GAAG,qBAAOyF,SAAP,CAAX;AACA,MAAIoB,OAAO,GAAG,oBAAU8zB,YAAV,CAAd;AACA36B,EAAAA,IAAI,CAACgS,UAAL,CAAgBnL,OAAhB;AACA,SAAO7G,IAAP;AACD;;;;;;;;;AChCD;;AACA;;AACA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAAS46B,OAAT,CA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MAAM,GAAG,oBAAUD,WAAV,CAAb;AACA,SAAO,qBAAWD,SAAX,EAAsB,CAACE,MAAvB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS61B,WAAT,CAAqB/1B,SAArB,EAAgCC,WAAhC,EAA6C;AAC1D,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIc,MAAM,GAAG,oBAAUD,WAAV,CAAb;AACA,SAAO,qBAAYD,SAAZ,EAAuB,CAACE,MAAxB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS81B,UAAT,CAAoBh2B,SAApB,EAA+BC,WAA/B,EAA4C;AACzD,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIc,MAAM,GAAG,oBAAUD,WAAV,CAAb;AACA,SAAO,qBAAWD,SAAX,EAAsB,CAACE,MAAvB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS+1B,QAAT,CAAkBj2B,SAAlB,EAA6BC,WAA7B,EAA0C;AACvD,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIc,MAAM,GAAG,oBAAUD,WAAV,CAAb;AACA,SAAO,qBAASD,SAAT,EAAoB,CAACE,MAArB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASg2B,QAAT,CAAkBl2B,SAAlB,EAA6BC,WAA7B,EAA0C;AACvD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","file":"weather-app.12bec63b.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export default async function getLatLong() {\n  let coordinates = [];\n  const response = await fetch(\"https://ipinfo.io/json?token=3631683ef9a03a\");\n  const json = await response.json();\n  return (coordinates = [...json.loc.split(\",\"), json.city]);\n}\n","export default async function getWeather(lattitude, longtitude) {\n  const apiKey = process.env.KEY;\n  const weatherRes = await fetch(\n    `https://api.openweathermap.org/data/2.5/onecall?lat=${lattitude}&lon=${longtitude}&units=imperial&appid=${apiKey}`\n  );\n  const data = await weatherRes.json();\n  return data;\n}\n","export default function displayCurrLocationWeather(\n  weatherData,\n  currCity,\n  hourlyWeather,\n  dailyWeather,\n  degree\n) {\n  const city = document.querySelector(\".curr-weather-city\");\n  const currTemp = document.querySelector(\".curr-weather-temp\");\n  const currCond = document.querySelector(\".curr-weather-condition\");\n  const currWeatherDiv = document.querySelector(\".current-weather\");\n  const currWeatherMin = document.querySelector(\".curr-weather-min\");\n  const currWeatherMax = document.querySelector(\".curr-weather-max\");\n  const hourWeatherList = document.querySelector(\".hour-weather-list\");\n  const weekWeatherList = document.querySelector(\".week-weather-list\");\n\n  // Current weather\n  city.textContent = currCity;\n  // If degree == Fahrenheight\n  if (degree == \"\\u00B0F\") {\n    currTemp.textContent = Math.floor(weatherData.current.temp) + degree;\n    currWeatherMin.textContent =\n      Math.floor(weatherData.daily[0].temp.min) + degree;\n    currWeatherMax.textContent =\n      Math.floor(weatherData.daily[0].temp.max) + degree;\n  } else {\n    currTemp.textContent =\n      Math.floor(((weatherData.current.temp - 32) * 5) / 9) + \"\\u00B0C\";\n    currWeatherMin.textContent =\n      Math.floor(((weatherData.daily[0].temp.min - 32) * 5) / 9) + \"\\u00B0C\";\n    currWeatherMax.textContent =\n      Math.floor(((weatherData.daily[0].temp.max - 32) * 5) / 9) + \"\\u00B0C\";\n  }\n  currCond.textContent = weatherData.current.weather[0].main;\n\n  // Determine if it's day or night and display background\n  let currentWeatherDayTime = \"\";\n  if (\n    weatherData.current.dt > weatherData.current.sunrise &&\n    weatherData.current.dt < weatherData.current.sunset\n  ) {\n    currentWeatherDayTime = \"day\";\n    currWeatherDiv.style.backgroundImage = `url('/images/backgrounds/${currentWeatherDayTime}-${weatherData.current.weather[0].main}.png')`;\n  }\n  if (\n    weatherData.current.dt > weatherData.current.sunrise &&\n    weatherData.current.dt > weatherData.current.sunset\n  ) {\n    currentWeatherDayTime = \"night\";\n    currWeatherDiv.style.backgroundImage = `url('/images/backgrounds/${currentWeatherDayTime}-${weatherData.current.weather[0].main}.png')`;\n  }\n  if (weatherData.current.dt < weatherData.current.sunrise) {\n    currentWeatherDayTime = \"night\";\n    currWeatherDiv.style.backgroundImage = `url('/images/backgrounds/${currentWeatherDayTime}-${weatherData.current.weather[0].main}.png')`;\n  }\n\n  // Hourly weather\n  // Remove noodes for displaying the weather from saved location when\n  // there is already displayed current weather, otherwise it would add new nodes\n  while (hourWeatherList.firstChild && hourWeatherList.lastChild) {\n    hourWeatherList.removeChild(hourWeatherList.firstChild);\n  }\n\n  hourlyWeather.forEach((hour) => {\n    const date = new Date(hour.dt * 1000);\n    const hourLi = document.createElement(\"li\");\n    const time = document.createElement(\"p\");\n    const temp = document.createElement(\"p\");\n    temp.classList = \"hour-temp\";\n    const hourImg = document.createElement(\"img\");\n\n    // Convert EPOCH seconds to local time and split resullting string into array\n    // for using only needed parts of that string in html element\n    let timeArray = date.toLocaleTimeString().split(\":\");\n\n    // Check if it's day or night\n    let hourDayTime = \"\";\n    if (\n      timeArray[2].charAt(3) == \"A\" &&\n      timeArray[0] >= 6 &&\n      timeArray[0] <= 11\n    ) {\n      hourDayTime = \"day\";\n    } else if (timeArray[2].charAt(3) == \"P\" && timeArray[0] == 12) {\n      hourDayTime = \"day\";\n    } else if (\n      timeArray[2].charAt(3) == \"P\" &&\n      timeArray[0] >= 1 &&\n      timeArray[0] <= 5\n    ) {\n      hourDayTime = \"day\";\n    } else if (\n      timeArray[2].charAt(3) == \"P\" &&\n      timeArray[0] > 5 &&\n      timeArray[0] <= 11\n    ) {\n      hourDayTime = \"night\";\n    } else if (timeArray[2].charAt(3) == \"A\" && timeArray[0] == 12) {\n      hourDayTime = \"night\";\n    } else if (\n      timeArray[2].charAt(3) == \"A\" &&\n      timeArray[0] >= 1 &&\n      timeArray[0] < 6\n    ) {\n      hourDayTime = \"night\";\n    }\n    // Display only time first digit and am/pm letters\n    time.innerText =\n      timeArray[0] + timeArray[2].charAt(3) + timeArray[2].charAt(4);\n    // If degree == Fahrenheight\n    degree == \"\\u00B0F\"\n      ? (temp.innerText = `${Math.ceil(hour.temp)}` + degree)\n      : (temp.innerText =\n          `${Math.ceil(((hour.temp - 32) * 5) / 9)}` + \"\\u00B0C\");\n\n    hourImg.src = `./images/icons/${hourDayTime}-${hour.weather[0].main}.png`;\n    hourImg.classList.add(\"hour-weather-img\");\n    hourLi.append(time, hourImg, temp);\n    hourWeatherList.appendChild(hourLi);\n  });\n\n  // Week weather\n  while (weekWeatherList.firstChild && weekWeatherList.lastChild) {\n    weekWeatherList.removeChild(weekWeatherList.firstChild);\n  }\n\n  dailyWeather.forEach((day) => {\n    const weekLi = document.createElement(\"li\");\n    const weekDayName = document.createElement(\"p\");\n    const weekImgCondDiv = document.createElement(\"div\");\n    const weekImgCond = document.createElement(\"img\");\n    const weekLowTempDiv = document.createElement(\"div\");\n    const weekImgTempLow = document.createElement(\"img\");\n    const weekTempLow = document.createElement(\"p\");\n    const weekHighTempDiv = document.createElement(\"div\");\n    const weekImgTempHigh = document.createElement(\"img\");\n    const weekTempHigh = document.createElement(\"p\");\n    const weekHumidityDiv = document.createElement(\"div\");\n    const weekImgHumidity = document.createElement(\"img\");\n    const weekHumidity = document.createElement(\"p\");\n\n    const weekDate = new Date(day.dt * 1000);\n    let dayName = \"\";\n    switch (weekDate.getUTCDay()) {\n      case 0:\n        dayName = \"Sunday\";\n        break;\n      case 1:\n        dayName = \"Monday\";\n        break;\n      case 2:\n        dayName = \"Tuesday\";\n        break;\n      case 3:\n        dayName = \"Wednesday\";\n        break;\n      case 4:\n        dayName = \"Thursday\";\n        break;\n      case 5:\n        dayName = \"Friday\";\n        break;\n      case 6:\n        dayName = \"Saturday\";\n        break;\n    }\n\n    weekDayName.innerText = dayName;\n    weekImgCond.src = `./images/icons/day-${day.weather[0].main}.png`;\n    weekImgTempLow.src = `./images/icons/thermometer-low.png`;\n    if (degree == \"\\u00B0F\") {\n      weekTempLow.innerText = `${Math.ceil(day.temp.min)}` + degree;\n      weekTempHigh.innerText = `${Math.ceil(day.temp.max)}` + degree;\n    } else {\n      weekTempLow.innerText =\n        `${Math.ceil(((day.temp.min - 32) * 5) / 9)}` + degree;\n      weekTempHigh.innerText =\n        `${Math.ceil(((day.temp.max - 32) * 5) / 9)}` + degree;\n    }\n    weekImgTempHigh.src = `./images/icons/thermometer-high.png`;\n    weekImgHumidity.src = `./images/icons/drop.png`;\n    weekHumidity.innerText = day.humidity + `\\u0025`;\n    weekImgCondDiv.appendChild(weekImgCond);\n    weekLowTempDiv.append(weekImgTempLow, weekTempLow);\n    weekHighTempDiv.append(weekImgTempHigh, weekTempHigh);\n    weekHumidityDiv.append(weekImgHumidity, weekHumidity);\n\n    weekLi.append(\n      weekDayName,\n      weekImgCondDiv,\n      weekLowTempDiv,\n      weekHighTempDiv,\n      weekHumidityDiv\n    );\n\n    weekWeatherList.appendChild(weekLi);\n  });\n\n  // Current weather details\n  // Sunrise\n  const sunriseTime = new Date(weatherData.current.sunrise * 1000);\n  let sunriseTimeArray = sunriseTime.toLocaleTimeString().split(\":\");\n  const sunrise = document.querySelector(\".sunrise-value\");\n  sunrise.innerText =\n    sunriseTimeArray[0] +\n    \".\" +\n    sunriseTimeArray[1] +\n    sunriseTimeArray[2].charAt(3) +\n    sunriseTimeArray[2].charAt(4);\n\n  //Sunset\n  const sunsetTime = new Date(weatherData.current.sunset * 1000);\n  let sunsetTimeArray = sunsetTime.toLocaleTimeString().split(\":\");\n  const sunset = document.querySelector(\".sunset-value\");\n  sunset.innerText =\n    sunsetTimeArray[0] +\n    \".\" +\n    sunsetTimeArray[1] +\n    sunsetTimeArray[2].charAt(3) +\n    sunsetTimeArray[2].charAt(4);\n\n  // Humidity\n  const humidity = document.querySelector(\".humidity-value\");\n  humidity.innerText = weatherData.current.humidity + `\\u0025`;\n  // Feels like\n  const feelsLike = document.querySelector(\".feels-like-value\");\n  degree == \"\\u00B0F\"\n    ? (feelsLike.innerText =\n        `${Math.ceil(weatherData.current.feels_like)}` + degree)\n    : (feelsLike.innerText =\n        `${Math.ceil(((weatherData.current.feels_like - 32) * 5) / 9)}` +\n        \"\\u00B0C\");\n\n  // Pressure\n  let pressureConverted = weatherData.current.pressure / 33.86;\n  const pressure = document.querySelector(\".pressure-value\");\n  pressure.innerText = pressureConverted.toFixed(2) + \" inHg\";\n  // Wind\n  let windDirection = \"\";\n  if (weatherData.current.wind_dig >= 0 && weatherData.current.wind_dig <= 90) {\n    windDirection = \"ene\";\n  } else if (\n    weatherData.current.wind_dig > 90 &&\n    weatherData.current.wind_dig < 180\n  ) {\n    windDirection = \"ese\";\n  } else if (\n    weatherData.current.wind_dig > 180 &&\n    weatherData.current.wind_dig < 270\n  ) {\n    windDirection = \"wsw\";\n  } else {\n    windDirection = \"wnw\";\n  }\n  const wind = document.querySelector(\".wind-value\");\n  wind.innerText =\n    windDirection + \" \" + weatherData.current.wind_speed + \" mph\";\n}\n","export default function getDegree() {\n  // Check default temp degree in storage\n  const dataFromStorage = JSON.parse(localStorage.getItem(\"locations\"));\n  if (!dataFromStorage?.defaultDegree) return \"\\u00B0F\";\n  else if (dataFromStorage.defaultDegree === \"\\u00B0F\") return \"\\u00B0F\";\n  else return \"\\u00B0C\";\n}\n","import displayCurrLocationWeather from \"./displayCurrLocationWeather\";\nimport getWeather from \"./getWeather\";\n\nexport default function displayWeatherFromSavedLoc(event) {\n  const footer = document.querySelector(\".footer\");\n  footer.classList.toggle(\"footer-open\");\n  const data = JSON.parse(localStorage.getItem(\"locations\"));\n  data.cities.forEach(async (city) => {\n    if (city.name == event.target.childNodes[0].innerText) {\n      const weatherData = await getWeather(city.lattitude, city.longtitude);\n      const { hourly, daily } = weatherData;\n      const hourWeatherList = document.querySelector(\".hour-weather-list\");\n      const weekWeatherList = document.querySelector(\".week-weather-list\");\n      \n      while (hourWeatherList.firstChild && hourWeatherList.lastChild) {\n        hourWeatherList.removeChild(hourWeatherList.firstChild);\n      }\n      while (weekWeatherList.firstChild && weekWeatherList.lastChild) {\n        weekWeatherList.removeChild(weekWeatherList.firstChild);\n      }\n\n      displayCurrLocationWeather(\n        weatherData,\n        city.name,\n        hourly,\n        daily,\n        data.defaultDegree\n      );\n    }\n  });\n}\n","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days\n\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isWeekend\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * const result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\n\nexport default function isWeekend(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day === 0 || day === 6;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSunday\n * @category Weekday Helpers\n * @summary Is the given date Sunday?\n *\n * @description\n * Is the given date Sunday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 21 September 2014 Sunday?\n * var result = isSunday(new Date(2014, 8, 21))\n * //=> true\n */\n\nexport default function isSunday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 0;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSaturday\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Saturday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * var result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\n\nexport default function isSaturday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 6;\n}","import isWeekend from \"../isWeekend/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isSunday from \"../isSunday/index.js\";\nimport isSaturday from \"../isSaturday/index.js\";\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * const result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function addBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var startedOnWeekend = isWeekend(date);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  var fullWeeks = toInteger(amount / 5);\n  date.setDate(date.getDate() + fullWeeks * 7); // Get remaining days not part of a full week\n\n  var restDays = Math.abs(amount % 5); // Loops over remaining days\n\n  while (restDays > 0) {\n    date.setDate(date.getDate() + sign);\n    if (!isWeekend(date)) restDays -= 1;\n  } // If the date is a weekend day and we reduce a dividable of\n  // 5 from it, we land on a weekend date.\n  // To counter this, we add days accordingly to land on the next business day\n\n\n  if (startedOnWeekend && isWeekend(date) && amount !== 0) {\n    // If we're reducing days, we want to add days until we land on a weekday\n    // If we're adding days we want to reduce days until we land on a weekday\n    if (isSaturday(date)) date.setDate(date.getDate() + (sign < 0 ? 2 : -1));\n    if (isSunday(date)) date.setDate(date.getDate() + (sign < 0 ? 1 : -2));\n  } // Restore hours to avoid DST lag\n\n\n  date.setHours(hours);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\n\nexport default function addHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return startOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import toDate from \"../toDate/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getISOYear` to `getISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\n\nexport default function getISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  return date;\n}","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `setISOYear` to `setISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeekYear - the ISO week-numbering year of the new date\n * @returns {Date} the new date with the ISO week-numbering year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * const result = setISOWeekYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\n\nexport default function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeekYear = toInteger(dirtyISOWeekYear);\n  var diff = differenceInCalendarDays(date, startOfISOWeekYear(date));\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  date = startOfISOWeekYear(fourthOfJanuary);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport setISOWeekYear from \"../setISOWeekYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Add the specified number of ISO week-numbering years to the given date.\n *\n * @description\n * Add the specified number of ISO week-numbering years to the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `addISOYears` to `addISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the ISO week-numbering years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 ISO week-numbering years to 2 July 2010:\n * const result = addISOWeekYears(new Date(2010, 6, 2), 5)\n * //=> Fri Jun 26 2015 00:00:00\n */\n\nexport default function addISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return setISOWeekYear(dirtyDate, getISOWeekYear(dirtyDate) + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addQuarters\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * const result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\n\nexport default function addQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var months = amount * 3;\n  return addMonths(dirtyDate, months);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * const result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\n\nexport default function addSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * 1000);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\n\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name areIntervalsOverlapping\n * @category Interval Helpers\n * @summary Is the given time interval overlapping with another time interval?\n *\n * @description\n * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   areRangesOverlapping(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   areIntervalsOverlapping(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.inclusive=false] - whether the comparison is inclusive or not\n * @returns {Boolean} whether the time intervals are overlapping\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> true\n *\n * @example\n * // For non-overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> false\n *\n * @example\n * // For adjacent time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }\n * )\n * //=> false\n *\n * @example\n * // Using the inclusive option:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) }\n * )\n * //=> false\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },\n *   { inclusive: true }\n * )\n * //=> true\n */\n\nexport default function areIntervalsOverlapping(dirtyIntervalLeft, dirtyIntervalRight) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    inclusive: false\n  };\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  if (options.inclusive) {\n    return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;\n  }\n\n  return leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `max` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var maxDate = max(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var maxDate = max(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the latest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\n\nexport default function max(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result < currentDate || isNaN(Number(currentDate))) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name min\n * @category Common Helpers\n * @summary Returns the earliest of the given dates.\n *\n * @description\n * Returns the earliest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `min` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   const date1 = new Date(1989, 6, 10)\n *   const date2 = new Date(1987, 1, 11)\n *   const minDate = min(date1, date2)\n *\n *   // v2.0.0 onward:\n *   const dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   const minDate = min(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} - the earliest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the earliest?\n * const result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\n\nexport default function min(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result > currentDate || isNaN(currentDate.getDate())) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import max from \"../max/index.js\";\nimport min from \"../min/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name clamp\n * @category Interval Helpers\n * @summary Return a date bounded by the start and the end of the given interval\n *\n * @description\n * Clamps a date to the lower bound with the start of the interval and the upper\n * bound with the end of the interval.\n *\n * - When the date is less than the start of the interval, the start is returned.\n * - When the date is greater than the end of the interval, the end is returned.\n * - Otherwise the date is returned.\n *\n * @example\n * // What is Mar, 21, 2021 bounded to an interval starting at Mar, 22, 2021 and ending at Apr, 01, 2021\n * const result = clamp(new Date(2021, 2, 21), {\n *   start: new Date(2021, 2, 22),\n *   end: new Date(2021, 3, 1),\n * })\n * //=> Mon Mar 22 2021 00:00:00\n *\n * @param {Date | Number} date - the date to be bounded\n * @param {Interval} interval - the interval to bound to\n * @returns {Date} the date bounded by the start and the end of the interval\n * @throws {TypeError} 2 arguments required\n */\n\nexport default function clamp(date, _ref) {\n  var start = _ref.start,\n      end = _ref.end;\n  requiredArgs(2, arguments);\n  return min([max([date, start]), end]);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name closestIndexTo\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestIndexTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Number} an index of the date closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * var dateToCompare = new Date(2015, 8, 6)\n * var datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * var result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\n\nexport default function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return NaN;\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate, index) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = NaN;\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = index;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name closestTo\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Date} the date from the array closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * var dateToCompare = new Date(2015, 8, 6)\n * var result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\n\nexport default function closestTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return new Date(NaN);\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = new Date(NaN);\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = currentDate;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareDesc\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * const result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\n\nexport default function compareDesc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff > 0) {\n    return -1;\n  } else if (diff < 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInMinute = 60000;\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInHour = 3600000;\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInSecond = 1000;\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minTime = -maxTime;\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minutesInHour = 60;\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInQuarter = 3;\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInYear = 12;\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var quartersInYear = 4;\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInHour = 3600;\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInMinute = 60;","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { daysInWeek } from \"../constants/index.js\";\n/**\n * @name daysToWeeks\n * @category Conversion Helpers\n * @summary Convert days to weeks.\n *\n * @description\n * Convert a number of days to a full number of weeks.\n *\n * @param {number} days - number of days to be converted\n *\n * @returns {number} the number of days converted in weeks\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 14 days to weeks:\n * const result = daysToWeeks(14)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = daysToWeeks(13)\n * //=> 1\n */\n\nexport default function daysToWeeks(days) {\n  requiredArgs(1, arguments);\n  var weeks = days / daysInWeek;\n  return Math.floor(weeks);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import isValid from \"../isValid/index.js\";\nimport isWeekend from \"../isWeekend/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport isSameDay from \"../isSameDay/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInBusinessDays\n * @category Day Helpers\n * @summary Get the number of business days between the given dates.\n *\n * @description\n * Get the number of business day periods between the given dates.\n * Business days being days that arent in the weekend.\n * Like `differenceInCalendarDays`, the function removes the times from\n * the dates before calculating the difference.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of business days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many business days are between\n * // 10 January 2014 and 20 July 2014?\n * var result = differenceInBusinessDays(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 0, 10)\n * )\n * //=> 136\n */\n\nexport default function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  if (!isValid(dateLeft) || !isValid(dateRight)) return NaN;\n  var calendarDifference = differenceInCalendarDays(dateLeft, dateRight);\n  var sign = calendarDifference < 0 ? -1 : 1;\n  var weeks = toInteger(calendarDifference / 7);\n  var result = weeks * 5;\n  dateRight = addDays(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week\n\n  while (!isSameDay(dateLeft, dateRight)) {\n    // sign is used to account for both negative and positive differences\n    result += isWeekend(dateRight) ? 0 : sign;\n    dateRight = addDays(dateRight, sign);\n  }\n\n  return result === 0 ? 0 : result;\n}","import getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of calendar ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of calendar ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInCalendarISOYears` to `differenceInCalendarISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\n * const result = differenceInCalendarISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return getISOWeekYear(dirtyDateLeft) - getISOWeekYear(dirtyDateRight);\n}","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarISOWeeks\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * const result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft);\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight);\n  var timestampLeft = startOfISOWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekLeft);\n  var timestampRight = startOfISOWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getQuarter\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which quarter is 2 July 2014?\n * const result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\n\nexport default function getQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = Math.floor(date.getMonth() / 3) + 1;\n  return quarter;\n}","import getQuarter from \"../getQuarter/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarQuarters\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var quarterDiff = getQuarter(dateLeft) - getQuarter(dateRight);\n  return yearDiff * 4 + quarterDiff;\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarWeeks\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * const result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * const result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   { weekStartsOn: 1 }\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var startOfWeekRight = startOfWeek(dirtyDateRight, dirtyOptions);\n  var timestampLeft = startOfWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekLeft);\n  var timestampRight = startOfWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() - dateRight.getFullYear();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\n\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * const result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\n\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign);\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dateLeft, dateRight) {\n  requiredArgs(2, arguments);\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}","var roundingMap = {\n  ceil: Math.ceil,\n  round: Math.round,\n  floor: Math.floor,\n  trunc: function (value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n  } // Math.trunc is not supported by IE\n\n};\nvar defaultRoundingMethod = 'trunc';\nexport function getRoundingMethod(method) {\n  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];\n}","import { millisecondsInHour } from \"../constants/index.js\";\nimport differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * const result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / millisecondsInHour;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addISOWeekYears from \"../addISOWeekYears/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Subtract the specified number of ISO week-numbering years from the given date.\n *\n * @description\n * Subtract the specified number of ISO week-numbering years from the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `subISOYears` to `subISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the ISO week-numbering years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 ISO week-numbering years from 1 September 2014:\n * const result = subISOWeekYears(new Date(2014, 8, 1), 5)\n * //=> Mon Aug 31 2009 00:00:00\n */\n\nexport default function subISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addISOWeekYears(dirtyDate, -amount);\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarISOWeekYears from \"../differenceInCalendarISOWeekYears/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport subISOWeekYears from \"../subISOWeekYears/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * var result = differenceInISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\n\nexport default function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarISOWeekYears(dateLeft, dateRight));\n  dateLeft = subISOWeekYears(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastISOWeekYearNotFull = Number(compareAsc(dateLeft, dateRight) === -sign);\n  var result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import { millisecondsInMinute } from \"../constants/index.js\";\nimport differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * const result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are between 10:01:59 and 10:00:00\n * const result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}","import differenceInMonths from \"../differenceInMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInQuarters\n * @category Quarter Helpers\n * @summary Get the number of quarters between the given dates.\n *\n * @description\n * Get the number of quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of full quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * const result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n * //=> 2\n */\n\nexport default function differenceInQuarters(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMonths(dateLeft, dateRight) / 3;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import differenceInDays from \"../differenceInDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between two dates. Fractional weeks are\n * truncated towards zero by default.\n *\n * One \"full week\" is the distance between a local time in one day to the same\n * local time 7 days earlier or later. A full week can sometimes be less than\n * or more than 7*24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 7*24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of full weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * const result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n *\n * // How many full weeks are between\n * // 1 March 2020 0:00 and 6 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 8 weeks (54 days),\n * // even if DST starts and the period has\n * // only 54*24-1 hours.\n * const result = differenceInWeeks(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 6)\n * )\n * //=> 8\n */\n\nexport default function differenceInWeeks(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInDays(dateLeft, dateRight) / 7;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarYears from \"../differenceInCalendarYears/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\n\nexport default function differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n\n  dateLeft.setFullYear(1584);\n  dateRight.setFullYear(1584); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - Number(isLastYearNotFull)); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import addHours from \"../addHours/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name eachHourOfInterval\n * @category Interval Helpers\n * @summary Return the array of hours within the specified time interval.\n *\n * @description\n * Return the array of hours within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of hours from the hour of the interval start to the hour of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each hour between 6 October 2014, 12:00 and 6 October 2014, 15:00\n * var result = eachHourOfInterval({\n *   start: new Date(2014, 9, 6, 12),\n *   end: new Date(2014, 9, 6, 15)\n * })\n * //=> [\n * //   Mon Oct 06 2014 12:00:00,\n * //   Mon Oct 06 2014 13:00:00,\n * //   Mon Oct 06 2014 14:00:00,\n * //   Mon Oct 06 2014 15:00:00\n * // ]\n */\nexport default function eachHourOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var startTime = startDate.getTime();\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setMinutes(0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate = addHours(currentDate, step);\n  }\n\n  return dates;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMinute\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * const result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\n\nexport default function startOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(0, 0);\n  return date;\n}","import addMinutes from \"../addMinutes/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport startOfMinute from \"../startOfMinute/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name eachMinuteOfInterval\n * @category Interval Helpers\n * @summary Return the array of minutes within the specified time interval.\n *\n * @description\n * Returns the array of minutes within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The starts of minutes from the hour of the interval start to the hour of the interval end\n * @throws {TypeError} 1 argument requie value should be more than 1.\n * @returns {Date[]} the array withred\n * @throws {RangeError} `options.step` must be a number equal or greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each minute between 14 October 2020, 13:00 and 14 October 2020, 13:03\n * const result = eachMinuteOfInterval({\n *   start: new Date(2014, 9, 14, 13),\n *   end: new Date(2014, 9, 14, 13, 3)\n * })\n * //=> [\n * //   Wed Oct 14 2014 13:00:00,\n * //   Wed Oct 14 2014 13:01:00,\n * //   Wed Oct 14 2014 13:02:00,\n * //   Wed Oct 14 2014 13:03:00\n * // ]\n */\nexport default function eachMinuteOfInterval(interval, options) {\n  requiredArgs(1, arguments);\n  var startDate = startOfMinute(toDate(interval.start));\n  var endDate = startOfMinute(toDate(interval.end));\n  var startTime = startDate.getTime();\n  var endTime = endDate.getTime();\n\n  if (startTime >= endTime) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number equal or greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate = addMinutes(currentDate, step);\n  }\n\n  return dates;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachMonthOfInterval\n * @category Interval Helpers\n * @summary Return the array of months within the specified time interval.\n *\n * @description\n * Return the array of months within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} the array with starts of months from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each month between 6 February 2014 and 10 August 2014:\n * var result = eachMonthOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Sat Feb 01 2014 00:00:00,\n * //   Sat Mar 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Thu May 01 2014 00:00:00,\n * //   Sun Jun 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * //   Fri Aug 01 2014 00:00:00\n * // ]\n */\n\nexport default function eachMonthOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n  var dates = []; // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setDate(1);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setMonth(currentDate.getMonth() + 1);\n  }\n\n  return dates;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfQuarter\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * const result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\n\nexport default function startOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3;\n  date.setMonth(month, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import addQuarters from \"../addQuarters/index.js\";\nimport startOfQuarter from \"../startOfQuarter/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachQuarterOfInterval\n * @category Interval Helpers\n * @summary Return the array of quarters within the specified time interval.\n *\n * @description\n * Return the array of quarters within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} the array with starts of quarters from the quarter of the interval start to the quarter of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each quarter within interval 6 February 2014 - 10 August 2014:\n * var result = eachQuarterOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * // ]\n */\n\nexport default function eachQuarterOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateQuarter = startOfQuarter(startDate);\n  var endDateQuarter = startOfQuarter(endDate);\n  endTime = endDateQuarter.getTime();\n  var quarters = [];\n  var currentQuarter = startDateQuarter;\n\n  while (currentQuarter.getTime() <= endTime) {\n    quarters.push(toDate(currentQuarter));\n    currentQuarter = addQuarters(currentQuarter, 1);\n  }\n\n  return quarters;\n}","import addWeeks from \"../addWeeks/index.js\";\nimport startOfWeek from \"../startOfWeek/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * var result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\n\nexport default function eachWeekOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateWeek = startOfWeek(startDate, options);\n  var endDateWeek = startOfWeek(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n  endTime = endDateWeek.getTime();\n  var weeks = [];\n  var currentWeek = startDateWeek;\n\n  while (currentWeek.getTime() <= endTime) {\n    currentWeek.setHours(0);\n    weeks.push(toDate(currentWeek));\n    currentWeek = addWeeks(currentWeek, 1);\n    currentWeek.setHours(15);\n  }\n\n  return weeks;\n}","import eachDayOfInterval from \"../eachDayOfInterval/index.js\";\nimport isSunday from \"../isSunday/index.js\";\nimport isWeekend from \"../isWeekend/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachWeekendOfInterval\n * @category Interval Helpers\n * @summary List all the Saturdays and Sundays in the given date interval.\n *\n * @description\n * Get all the Saturdays and Sundays in the given date interval.\n *\n * @param {Interval} interval - the given interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Lists all Saturdays and Sundays in the given date interval\n * const result = eachWeekendOfInterval({\n *   start: new Date(2018, 8, 17),\n *   end: new Date(2018, 8, 30)\n * })\n * //=> [\n * //   Sat Sep 22 2018 00:00:00,\n * //   Sun Sep 23 2018 00:00:00,\n * //   Sat Sep 29 2018 00:00:00,\n * //   Sun Sep 30 2018 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfInterval(interval) {\n  requiredArgs(1, arguments);\n  var dateInterval = eachDayOfInterval(interval);\n  var weekends = [];\n  var index = 0;\n\n  while (index < dateInterval.length) {\n    var date = dateInterval[index++];\n\n    if (isWeekend(date)) {\n      weekends.push(date);\n      if (isSunday(date)) index = index + 5;\n    }\n  }\n\n  return weekends;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import eachWeekendOfInterval from \"../eachWeekendOfInterval/index.js\";\nimport startOfMonth from \"../startOfMonth/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachWeekendOfMonth\n * @category Month Helpers\n * @summary List all the Saturdays and Sundays in the given month.\n *\n * @description\n * Get all the Saturdays and Sundays in the given month.\n *\n * @param {Date|Number} date - the given month\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the given month\n * const result = eachWeekendOfMonth(new Date(2022, 1, 1))\n * //=> [\n * //   Sat Feb 05 2022 00:00:00,\n * //   Sun Feb 06 2022 00:00:00,\n * //   Sat Feb 12 2022 00:00:00,\n * //   Sun Feb 13 2022 00:00:00,\n * //   Sat Feb 19 2022 00:00:00,\n * //   Sun Feb 20 2022 00:00:00,\n * //   Sat Feb 26 2022 00:00:00,\n * //   Sun Feb 27 2022 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfMonth(dirtyDate);\n  if (isNaN(startDate.getTime())) throw new RangeError('The passed date is invalid');\n  var endDate = endOfMonth(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\n\nexport default function endOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import eachWeekendOfInterval from \"../eachWeekendOfInterval/index.js\";\nimport startOfYear from \"../startOfYear/index.js\";\nimport endOfYear from \"../endOfYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachWeekendOfYear\n * @category Year Helpers\n * @summary List all the Saturdays and Sundays in the year.\n *\n * @description\n * Get all the Saturdays and Sundays in the year.\n *\n * @param {Date|Number} date - the given year\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the year\n * var result = eachWeekendOfYear(new Date(2020, 1, 1))\n * //=> [\n * //   Sat Jan 03 2020 00:00:00,\n * //   Sun Jan 04 2020 00:00:00,\n * //   ...\n * //   Sun Dec 27 2020 00:00:00\n * // ]\n * ]\n */\n\nexport default function eachWeekendOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfYear(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = endOfYear(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachYearOfInterval\n * @category Interval Helpers\n * @summary Return the array of yearly timestamps within the specified time interval.\n *\n * @description\n * Return the array of yearly timestamps within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each year between 6 February 2014 and 10 August 2017:\n * const result = eachYearOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2017, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Thu Jan 01 2015 00:00:00,\n * //   Fri Jan 01 2016 00:00:00,\n * //   Sun Jan 01 2017 00:00:00\n * // ]\n */\n\nexport default function eachYearOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setMonth(0, 1);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setFullYear(currentDate.getFullYear() + 1);\n  }\n\n  return dates;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDecade\n * @category Decade Helpers\n * @summary Return the end of a decade for the given date.\n *\n * @description\n * Return the end of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a decade\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The end of a decade for 12 May 1984 00:00:00:\n * const result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))\n * //=> Dec 31 1989 23:59:59.999\n */\n\nexport default function endOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 11, 31);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfHour\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * const result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\n\nexport default function endOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import endOfWeek from \"../endOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return endOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * const result = endOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\n\nexport default function endOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  date.setMilliseconds(date.getMilliseconds() - 1);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMinute\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * const result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\n\nexport default function endOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfQuarter\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * const result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfSecond\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * const result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\n\nexport default function endOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(999);\n  return date;\n}","import endOfDay from \"../endOfDay/index.js\";\n/**\n * @name endOfToday\n * @category Day Helpers\n * @summary Return the end of today.\n * @pure false\n *\n * @description\n * Return the end of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\n\nexport default function endOfToday() {\n  return endOfDay(Date.now());\n}","/**\n * @name endOfTomorrow\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n * @pure false\n *\n * @description\n * Return the end of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * const result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nexport default function endOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","/**\n * @name endOfYesterday\n * @category Day Helpers\n * @summary Return the end of yesterday.\n * @pure false\n *\n * @description\n * Return the end of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * const result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nexport default function endOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challange you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from \"../toInteger/index.js\";\nimport getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import lightFormatters from \"../lightFormatters/index.js\";\nimport getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 1000 * 60;\nvar MINUTES_IN_DAY = 60 * 24;\nvar MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;\nvar MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(2015, 0, 2),\n *     new Date(2014, 6, 2)\n *   ) //=> '6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(2014, 6, 2),\n *     new Date(2015, 0, 2)\n *   ) //=> '6 months'\n *   ```\n *\n * - `partialMethod` option is renamed to `roundingMethod`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { partialMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { roundingMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *   ```\n *\n * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n *\n * - `unit` option now accepts one of the strings:\n *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { unit: 'm' }\n *   )\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { unit: 'minute' }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * const result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * const result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * const result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);\n  var roundingMethodFn;\n\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n\n  var milliseconds = dateRight.getTime() - dateLeft.getTime();\n  var minutes = milliseconds / MILLISECONDS_IN_MINUTE;\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft); // Use DST-normalized difference in minutes for years, months and days;\n  // use regular difference in minutes for hours, minutes and seconds.\n\n  var dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;\n  var unit;\n\n  if (options.unit == null) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (dstNormalizedMinutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (dstNormalizedMinutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(options.unit);\n  } // 0 up to 60 seconds\n\n\n  if (unit === 'second') {\n    var seconds = roundingMethodFn(milliseconds / 1000);\n    return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    var roundedMinutes = roundingMethodFn(minutes);\n    return locale.formatDistance('xMinutes', roundedMinutes, localizeOptions); // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);\n    return months === 12 && options.unit !== 'month' ? locale.formatDistance('xYears', 1, localizeOptions) : locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import distanceInWords from \"../formatDistance/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *   ```\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), dirtyOptions);\n}","import formatDistanceStrict from \"../formatDistanceStrict/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return formatDistanceStrict(dirtyDate, Date.now(), dirtyOptions);\n}","import defaultLocale from \"../locale/en-US/index.js\";\nvar defaultFormat = ['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'];\n/**\n * @name formatDuration\n * @category Common Helpers\n * @summary Formats a duration in human-readable format\n *\n * @description\n * Return human-readable duration string i.e. \"9 months 2 days\"\n *\n * @param {Duration} duration - the duration to format\n * @param {Object} [options] - an object with options.\n\n * @param {string[]} [options.format=['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']] - the array of units to format\n * @param {boolean} [options.zero=false] - should be zeros be included in the output?\n * @param {string} [options.delimiter=' '] - delimiter string\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {string} the formatted date string\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Format full duration\n * formatDuration({\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds\n *\n * @example\n * // Format partial duration\n * formatDuration({ months: 9, days: 2 })\n * //=> '9 months 2 days'\n *\n * @example\n * // Customize the format\n * formatDuration(\n *   {\n *     years: 2,\n *     months: 9,\n *     weeks: 1,\n *     days: 7,\n *     hours: 5,\n *     minutes: 9,\n *     seconds: 30\n *   },\n *   { format: ['months', 'weeks'] }\n * ) === '9 months 1 week'\n *\n * @example\n * // Customize the zeros presence\n * formatDuration({ years: 0, months: 9 })\n * //=> '9 months'\n * formatDuration({ years: 0, months: 9 }, { zero: true })\n * //=> '0 years 9 months'\n *\n * @example\n * // Customize the delimiter\n * formatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })\n * //=> '2 years, 9 months, 3 weeks'\n */\n\nexport default function formatDuration(duration, options) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var format = (options === null || options === void 0 ? void 0 : options.format) || defaultFormat;\n  var locale = (options === null || options === void 0 ? void 0 : options.locale) || defaultLocale;\n  var zero = (options === null || options === void 0 ? void 0 : options.zero) || false;\n  var delimiter = (options === null || options === void 0 ? void 0 : options.delimiter) || ' ';\n  var result = format.reduce(function (acc, unit) {\n    var token = \"x\".concat(unit.replace(/(^.)/, function (m) {\n      return m.toUpperCase();\n    }));\n    var addChunk = typeof duration[unit] === 'number' && (zero || duration[unit]);\n    return addChunk ? acc.concat(locale.formatDistance(token, duration[unit])) : acc;\n  }, []).join(delimiter);\n  return result;\n}","import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with time zone, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\n\nexport default function formatISO(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = addLeadingZeros(Math.floor(absoluteOffset / 60), 2);\n      var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'\n\n    var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n\n    var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n\n  return result;\n}","import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\n/**\n * @name formatISO9075\n * @category Common Helpers\n * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).\n *\n * @description\n * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18 19:00:52'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075, short format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918 190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, date only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, time only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52'\n */\n\nexport default function formatISO9075(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space\n\n    var separator = result === '' ? '' : ' '; // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);\n  }\n\n  return result;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatISODuration\n * @category Common Helpers\n * @summary Format a duration object according as ISO 8601 duration string\n *\n * @description\n * Format a duration object according to the ISO 8601 duration standard (https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm)\n *\n * @param {Duration} duration - the duration to format\n *\n * @returns {String} The ISO 8601 duration string\n * @throws {TypeError} Requires 1 argument\n * @throws {Error} Argument must be an object\n *\n * @example\n * // Format the given duration as ISO 8601 string\n * const result = formatISODuration({\n *   years: 39,\n *   months: 2,\n *   days: 20,\n *   hours: 7,\n *   minutes: 5,\n *   seconds: 0\n * })\n * //=> 'P39Y2M20DT0H0M0S'\n */\n\nexport default function formatISODuration(duration) {\n  requiredArgs(1, arguments);\n  if (typeof duration !== 'object') throw new Error('Duration must be an object');\n  var _duration$years = duration.years,\n      years = _duration$years === void 0 ? 0 : _duration$years,\n      _duration$months = duration.months,\n      months = _duration$months === void 0 ? 0 : _duration$months,\n      _duration$days = duration.days,\n      days = _duration$days === void 0 ? 0 : _duration$days,\n      _duration$hours = duration.hours,\n      hours = _duration$hours === void 0 ? 0 : _duration$hours,\n      _duration$minutes = duration.minutes,\n      minutes = _duration$minutes === void 0 ? 0 : _duration$minutes,\n      _duration$seconds = duration.seconds,\n      seconds = _duration$seconds === void 0 ? 0 : _duration$seconds;\n  return \"P\".concat(years, \"Y\").concat(months, \"M\").concat(days, \"DT\").concat(hours, \"H\").concat(minutes, \"M\").concat(seconds, \"S\");\n}","import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n\n/**\n * @name formatRFC3339\n * @category Common Helpers\n * @summary Format the date according to the RFC 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).\n *\n * @description\n * Return the formatted date string in RFC 3339 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2|3} [options.fractionDigits=0] - number of digits after the decimal point after seconds\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.fractionDigits` must be between 0 and 3\n *\n * @example\n * // Represent 18 September 2019 in RFC 3339 format:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in RFC 3339 format, 2 digits of second fraction:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 2 })\n * //=> '2019-09-18T19:00:52.23Z'\n *\n * @example\n * // Represent 18 September 2019 in RFC 3339 format, 3 digits of second fraction\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 3 })\n * //=> '2019-09-18T19:00:52.234Z'\n */\nexport default function formatRFC3339(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var _ref = dirtyOptions || {},\n      _ref$fractionDigits = _ref.fractionDigits,\n      fractionDigits = _ref$fractionDigits === void 0 ? 0 : _ref$fractionDigits; // Test if fractionDigits is between 0 and 3 _and_ is not NaN\n\n\n  if (!(fractionDigits >= 0 && fractionDigits <= 3)) {\n    throw new RangeError('fractionDigits must be between 0 and 3 inclusively');\n  }\n\n  var day = addLeadingZeros(originalDate.getDate(), 2);\n  var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n  var year = originalDate.getFullYear();\n  var hour = addLeadingZeros(originalDate.getHours(), 2);\n  var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getSeconds(), 2);\n  var fractionalSecond = '';\n\n  if (fractionDigits > 0) {\n    var milliseconds = originalDate.getMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));\n    fractionalSecond = '.' + addLeadingZeros(fractionalSeconds, fractionDigits);\n  }\n\n  var offset = '';\n  var tzOffset = originalDate.getTimezoneOffset();\n\n  if (tzOffset !== 0) {\n    var absoluteOffset = Math.abs(tzOffset);\n    var hourOffset = addLeadingZeros(toInteger(absoluteOffset / 60), 2);\n    var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n    var sign = tzOffset < 0 ? '+' : '-';\n    offset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n  } else {\n    offset = 'Z';\n  }\n\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day, \"T\").concat(hour, \":\").concat(minute, \":\").concat(second).concat(fractionalSecond).concat(offset);\n}","import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\nvar days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n/**\n * @name formatRFC7231\n * @category Common Helpers\n * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).\n *\n * @description\n * Return the formatted date string in RFC 7231 format.\n * The result will always be in UTC timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n *\n * @example\n * // Represent 18 September 2019 in RFC 7231 format:\n * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))\n * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'\n */\n\nexport default function formatRFC7231(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var dayName = days[originalDate.getUTCDay()];\n  var dayOfMonth = addLeadingZeros(originalDate.getUTCDate(), 2);\n  var monthName = months[originalDate.getUTCMonth()];\n  var year = originalDate.getUTCFullYear();\n  var hour = addLeadingZeros(originalDate.getUTCHours(), 2);\n  var minute = addLeadingZeros(originalDate.getUTCMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getUTCSeconds(), 2); // Result variables.\n\n  return \"\".concat(dayName, \", \").concat(dayOfMonth, \" \").concat(monthName, \" \").concat(year, \" \").concat(hour, \":\").concat(minute, \":\").concat(second, \" GMT\");\n}","import differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport format from \"../format/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to format\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {String} the date in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.locale` must contain `formatRelative` property\n *\n * @example\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\n * const result = formatRelative(addDays(new Date(), -6), new Date())\n * //=> \"last Thursday at 12:45 AM\"\n */\nexport default function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var baseDate = toDate(dirtyBaseDate);\n\n  var _ref = dirtyOptions || {},\n      _ref$locale = _ref.locale,\n      locale = _ref$locale === void 0 ? defaultLocale : _ref$locale,\n      _ref$weekStartsOn = _ref.weekStartsOn,\n      weekStartsOn = _ref$weekStartsOn === void 0 ? 0 : _ref$weekStartsOn;\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  if (!locale.formatRelative) {\n    throw new RangeError('locale must contain formatRelative property');\n  }\n\n  var diff = differenceInCalendarDays(date, baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var token;\n\n  if (diff < -6) {\n    token = 'other';\n  } else if (diff < -1) {\n    token = 'lastWeek';\n  } else if (diff < 0) {\n    token = 'yesterday';\n  } else if (diff < 1) {\n    token = 'today';\n  } else if (diff < 2) {\n    token = 'tomorrow';\n  } else if (diff < 7) {\n    token = 'nextWeek';\n  } else {\n    token = 'other';\n  }\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var utcBaseDate = subMilliseconds(baseDate, getTimezoneOffsetInMilliseconds(baseDate));\n  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, {\n    locale: locale,\n    weekStartsOn: weekStartsOn\n  });\n  return format(date, formatStr, {\n    locale: locale,\n    weekStartsOn: weekStartsOn\n  });\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Number} unixTime - the given Unix timestamp (in seconds)\n * @returns {Date} the date\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * const result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\n\nexport default function fromUnixTime(dirtyUnixTime) {\n  requiredArgs(1, arguments);\n  var unixTime = toInteger(dirtyUnixTime);\n  return toDate(unixTime * 1000);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * const result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\n\nexport default function getDate(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\n\nexport default function getDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day;\n}","import toDate from \"../toDate/index.js\";\nimport startOfYear from \"../startOfYear/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\n\nexport default function getDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * const result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\n\nexport default function getDaysInMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLeapYear\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * var result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\n\nexport default function isLeapYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","import toDate from \"../toDate/index.js\";\nimport isLeapYear from \"../isLeapYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDaysInYear\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in 2012?\n * const result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\n\nexport default function getDaysInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n\n  if (String(new Date(date)) === 'Invalid Date') {\n    return NaN;\n  }\n\n  return isLeapYear(date) ? 366 : 365;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDecade\n * @category Decade Helpers\n * @summary Get the decade of the given date.\n *\n * @description\n * Get the decade of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year of decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which decade belongs 27 November 1942?\n * const result = getDecade(new Date(1942, 10, 27))\n * //=> 1940\n */\n\nexport default function getDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  return decade;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * const result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\n\nexport default function getHours(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var hours = date.getHours();\n  return hours;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\n\nexport default function getISODay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}","import toDate from \"../toDate/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\n\nexport default function getISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport addWeeks from \"../addWeeks/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeeksInYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * const result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\n\nexport default function getISOWeeksInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var thisYear = startOfISOWeekYear(dirtyDate);\n  var nextYear = startOfISOWeekYear(addWeeks(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMilliseconds\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * const result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\n\nexport default function getMilliseconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = date.getMilliseconds();\n  return milliseconds;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * const result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\n\nexport default function getMinutes(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = date.getMinutes();\n  return minutes;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;\n/**\n * @name getOverlappingDaysInIntervals\n * @category Interval Helpers\n * @summary Get the number of days that overlap in two time intervals\n *\n * @description\n * Get the number of days that overlap in two time intervals\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getOverlappingDaysInRanges` to `getOverlappingDaysInIntervals`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   getOverlappingDaysInRanges(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   getOverlappingDaysInIntervals(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/Interval}\n * @returns {Number} the number of days that overlap in two time intervals\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals adds 1 for each started overlapping day:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping time intervals returns 0:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> 0\n */\n\nexport default function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n\n  if (!isOverlapping) {\n    return 0;\n  }\n\n  var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;\n  var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;\n  var differenceInMs = overlapEndDate - overlapStartDate;\n  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getSeconds\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * const result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\n\nexport default function getSeconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds();\n  return seconds;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * const result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\n\nexport default function getTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}","import getTime from \"../getTime/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getUnixTime\n * @category Timestamp Helpers\n * @summary Get the seconds timestamp of the given date.\n *\n * @description\n * Get the seconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05 CET:\n * const result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 1330512305\n */\n\nexport default function getUnixTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  return Math.floor(getTime(dirtyDate) / 1000);\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the local week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport default function getWeekYear(dirtyDate, options) {\n  var _options$locale, _options$locale$optio;\n\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var localeFirstWeekContainsDate = options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = (options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getWeekYear from \"../getWeekYear/index.js\";\nimport startOfWeek from \"../startOfWeek/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the start of a week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport default function startOfWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  var date = startOfWeek(firstWeek, dirtyOptions);\n  return date;\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport startOfWeekYear from \"../startOfWeekYear/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getISOWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport default function getWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getDate from \"../getDate/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport startOfMonth from \"../startOfMonth/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getWeekOfMonth\n * @category Week Helpers\n * @summary Get the week of the month of the given date.\n *\n * @description\n * Get the week of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the week of month\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Which week of the month is 9 November 2017?\n * var result = getWeekOfMonth(new Date(2017, 10, 9))\n * //=> 2\n */\n\nexport default function getWeekOfMonth(date, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var currentDayOfMonth = getDate(date);\n\n  if (isNaN(currentDayOfMonth)) {\n    return currentDayOfMonth;\n  }\n\n  var startWeekDay = getDay(startOfMonth(date));\n  var lastDayOfFirstWeek = 0;\n\n  if (startWeekDay >= weekStartsOn) {\n    lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;\n  } else {\n    lastDayOfFirstWeek = weekStartsOn - startWeekDay;\n  }\n\n  var weekNumber = 1;\n\n  if (currentDayOfMonth > lastDayOfFirstWeek) {\n    var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\n    weekNumber = weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);\n  }\n\n  return weekNumber;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import differenceInCalendarWeeks from \"../differenceInCalendarWeeks/index.js\";\nimport lastDayOfMonth from \"../lastDayOfMonth/index.js\";\nimport startOfMonth from \"../startOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name getWeeksInMonth\n * @category Week Helpers\n * @summary Get the number of calendar weeks a month spans.\n *\n * @description\n * Get the number of calendar weeks the month in the given date spans.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks does February 2015 span?\n * const result = getWeeksInMonth(new Date(2015, 1, 8))\n * //=> 4\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks does July 2017 span?\n * const result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\n * //=> 6\n */\nexport default function getWeeksInMonth(date, options) {\n  requiredArgs(1, arguments);\n  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { millisecondsInHour } from \"../constants/index.js\";\n/**\n * @name hoursToMilliseconds\n * @category  Conversion Helpers\n * @summary Convert hours to milliseconds.\n *\n * @description\n * Convert a number of hours to a full number of milliseconds.\n *\n * @param {number} hours - number of hours to be converted\n *\n * @returns {number} the number of hours converted to milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 hours to milliseconds:\n * const result = hoursToMilliseconds(2)\n * //=> 7200000\n */\n\nexport default function hoursToMilliseconds(hours) {\n  requiredArgs(1, arguments);\n  return Math.floor(hours * millisecondsInHour);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { minutesInHour } from \"../constants/index.js\";\n/**\n * @name hoursToMinutes\n * @category Conversion Helpers\n * @summary Convert hours to minutes.\n *\n * @description\n * Convert a number of hours to a full number of minutes.\n *\n * @param {number} hours - number of hours to be converted\n *\n * @returns {number} the number of hours converted in minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 hours to minutes:\n * const result = hoursToMinutes(2)\n * //=> 120\n */\n\nexport default function hoursToMinutes(hours) {\n  requiredArgs(1, arguments);\n  return Math.floor(hours * minutesInHour);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { secondsInHour } from \"../constants/index.js\";\n/**\n * @name hoursToSeconds\n * @category Conversion Helpers\n * @summary Convert hours to seconds.\n *\n * @description\n * Convert a number of hours to a full number of seconds.\n *\n * @param {number} hours - number of hours to be converted\n *\n * @returns {number} the number of hours converted in seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 hours to seconds:\n * const result = hoursToSeconds(2)\n * //=> 7200\n */\n\nexport default function hoursToSeconds(hours) {\n  requiredArgs(1, arguments);\n  return Math.floor(hours * secondsInHour);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\n\nexport default function sub(date, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(date, months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInYears from \"../differenceInYears/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInDays from \"../differenceInDays/index.js\";\nimport differenceInHours from \"../differenceInHours/index.js\";\nimport differenceInMinutes from \"../differenceInMinutes/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport sub from \"../sub/index.js\";\n/**\n * @name intervalToDuration\n * @category Common Helpers\n * @summary Convert interval to duration\n *\n * @description\n * Convert a interval object to a duration object.\n *\n * @param {Interval} interval - the interval to convert to duration\n *\n * @returns {Duration} The duration Object\n * @throws {TypeError} Requires 2 arguments\n * @throws {RangeError} `start` must not be Invalid Date\n * @throws {RangeError} `end` must not be Invalid Date\n *\n * @example\n * // Get the duration between January 15, 1929 and April 4, 1968.\n * intervalToDuration({\n *   start: new Date(1929, 0, 15, 12, 0, 0),\n *   end: new Date(1968, 3, 4, 19, 5, 0)\n * })\n * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }\n */\n\nexport default function intervalToDuration(_ref) {\n  var start = _ref.start,\n      end = _ref.end;\n  requiredArgs(1, arguments);\n  var dateLeft = toDate(start);\n  var dateRight = toDate(end);\n\n  if (!isValid(dateLeft)) {\n    throw new RangeError('Start Date is invalid');\n  }\n\n  if (!isValid(dateRight)) {\n    throw new RangeError('End Date is invalid');\n  }\n\n  var duration = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  var sign = compareAsc(dateLeft, dateRight);\n  duration.years = Math.abs(differenceInYears(dateLeft, dateRight));\n  var remainingMonths = sub(dateLeft, {\n    years: sign * duration.years\n  });\n  duration.months = Math.abs(differenceInMonths(remainingMonths, dateRight));\n  var remainingDays = sub(remainingMonths, {\n    months: sign * duration.months\n  });\n  duration.days = Math.abs(differenceInDays(remainingDays, dateRight));\n  var remainingHours = sub(remainingDays, {\n    days: sign * duration.days\n  });\n  duration.hours = Math.abs(differenceInHours(remainingHours, dateRight));\n  var remainingMinutes = sub(remainingHours, {\n    hours: sign * duration.hours\n  });\n  duration.minutes = Math.abs(differenceInMinutes(remainingMinutes, dateRight));\n  var remainingSeconds = sub(remainingMinutes, {\n    minutes: sign * duration.minutes\n  });\n  duration.seconds = Math.abs(differenceInSeconds(remainingSeconds, dateRight));\n  return duration;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name intlFormat\n * @category Common Helpers\n * @summary  Format the date with Intl.DateTimeFormat (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat).\n *\n * @description\n * Return the formatted date string in the given format.\n * The method uses [`Intl.DateTimeFormat`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat) inside.\n * formatOptions are the same as [`Intl.DateTimeFormat` options](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat#using_options)\n *\n * > ⚠️ Please note that before Node version 13.0.0, only the locale data for en-US is available by default.\n *\n * @param {Date|Number} argument - the original date.\n * @param {Object} [formatOptions] - an object with options.\n * @param {'lookup'|'best fit'} [formatOptions.localeMatcher='best fit'] - locale selection algorithm.\n * @param {'narrow'|'short'|'long'} [formatOptions.weekday] - representation the days of the week.\n * @param {'narrow'|'short'|'long'} [formatOptions.era] - representation of eras.\n * @param {'numeric'|'2-digit'} [formatOptions.year] - representation of years.\n * @param {'numeric'|'2-digit'|'narrow'|'short'|'long'} [formatOptions.month='numeric'] - representation of month.\n * @param {'numeric'|'2-digit'} [formatOptions.day='numeric'] - representation of day.\n * @param {'numeric'|'2-digit'} [formatOptions.hour='numeric'] - representation of hours.\n * @param {'numeric'|'2-digit'} [formatOptions.minute] - representation of minutes.\n * @param {'numeric'|'2-digit'} [formatOptions.second] - representation of seconds.\n * @param {'short'|'long'} [formatOptions.timeZoneName] - representation of names of time zones.\n * @param {'basic'|'best fit'} [formatOptions.formatMatcher='best fit'] - format selection algorithm.\n * @param {Boolean} [formatOptions.hour12] - determines whether to use 12-hour time format.\n * @param {String} [formatOptions.timeZone] - the time zone to use.\n * @param {Object} [localeOptions] - an object with locale.\n * @param {String|String[]} [localeOptions.locale] - the locale code\n * @returns {String} the formatted date string.\n * @throws {TypeError} 1 argument required.\n * @throws {RangeError} `date` must not be Invalid Date\n *\n * @example\n * // Represent 10 October 2019 in German.\n * // Convert the date with format's options and locale's options.\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      weekday: 'long',\n *      year: 'numeric',\n *      month: 'long',\n *      day: 'numeric',\n *    }, {\n *      locale: 'de-DE',\n *  })\n * //=> Freitag, 4. Oktober 2019\n *\n * @example\n * // Represent 10 October 2019.\n * // Convert the date with format's options.\n * const result = intlFormat.default(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      year: 'numeric',\n *      month: 'numeric',\n *      day: 'numeric',\n *      hour: 'numeric',\n *  })\n * //=> 10/4/2019, 12 PM\n *\n * @example\n * // Represent 10 October 2019 in Korean.\n * // Convert the date with locale's options.\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      locale: 'ko-KR',\n *  })\n * //=> 2019. 10. 4.\n *\n * @example\n * // Represent 10 October 2019 in middle-endian format:\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456))\n * //=> 10/4/2019\n */\nexport default function intlFormat(date, formatOrLocale, localeOptions) {\n  var _localeOptions;\n\n  requiredArgs(1, arguments);\n  var formatOptions;\n\n  if (isFormatOptions(formatOrLocale)) {\n    formatOptions = formatOrLocale;\n  } else {\n    localeOptions = formatOrLocale;\n  }\n\n  return new Intl.DateTimeFormat((_localeOptions = localeOptions) === null || _localeOptions === void 0 ? void 0 : _localeOptions.locale, formatOptions).format(date);\n}\n\nfunction isFormatOptions(opts) {\n  return opts !== undefined && !('locale' in opts);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\n\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\n\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\n\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyLeftDate);\n  var dateRight = toDate(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}","/**\n * @name isExists\n * @category Common Helpers\n * @summary Is the given date exists?\n *\n * @description\n * Checks if the given arguments convert to an existing date.\n *\n * @param {Number} year of the date to check\n * @param {Number} month of the date to check\n * @param {Number} day of the date to check\n * @returns {Boolean} the date exists\n * @throws {TypeError} 3 arguments required\n *\n * @example\n * // For the valid date:\n * var result = isExists(2018, 0, 31)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isExists(2018, 1, 31)\n * //=> false\n */\nexport default function isExists(year, month, day) {\n  if (arguments.length < 3) {\n    throw new TypeError('3 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = new Date(year, month, day);\n  return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isFirstDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the first day of a month?\n *\n * @description\n * Is the given date the first day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the first day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2014 the first day of a month?\n * var result = isFirstDayOfMonth(new Date(2014, 8, 1))\n * //=> true\n */\n\nexport default function isFirstDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDate() === 1;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isFriday\n * @category Weekday Helpers\n * @summary Is the given date Friday?\n *\n * @description\n * Is the given date Friday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Friday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 26 September 2014 Friday?\n * var result = isFriday(new Date(2014, 8, 26))\n * //=> true\n */\n\nexport default function isFriday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 5;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * var result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\n\nexport default function isFuture(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() > Date.now();\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport parsers from \"./_lib/parsers/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward (toDate no longer accepts a string)\n *   toDate(1392098430000) // Unix to timestamp\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale\n  }; // If timezone isn't specified, it will be set to the system timezone\n\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import parse from \"../parse/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name isMatch\n * @category Common Helpers\n * @summary validates the date string against given formats\n *\n * @description\n * Return the true if given date is string correct against the given format else\n * will return false.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * isMatch('23 AM', 'HH a')\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `isMatch` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `isMatch` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `isMatch` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `isMatch('50', 'yy') //=> true`\n *\n *    `isMatch('75', 'yy') //=> true`\n *\n *    while `uu` will use the year as is:\n *\n *    `isMatch('50', 'uu') //=> true`\n *\n *    `isMatch('75', 'uu') //=> true`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be checked in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are matched (e.g. when matching string 'January 1st' without a year),\n * the values will be taken from today's using `new Date()` date which works as a context of parsing.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n *\n *\n * @param {String} dateString - the date string to verify\n * @param {String} formatString - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Boolean}\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Match 11 February 2014 from middle-endian format:\n * var result = isMatch('02/11/2014', 'MM/dd/yyyy')\n * //=> true\n *\n * @example\n * // Match 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = isMatch('28-a de februaro', \"do 'de' MMMM\", {\n *   locale: eo\n * })\n * //=> true\n */\nexport default function isMatch(dateString, formatString, options) {\n  requiredArgs(2, arguments);\n  return isValid(parse(dateString, formatString, new Date(), options));\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isMonday\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Monday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 22 September 2014 Monday?\n * var result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isMonday(date) {\n  requiredArgs(1, arguments);\n  return toDate(date).getDay() === 1;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isPast(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() < Date.now();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * const result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\n\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import startOfHour from \"../startOfHour/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameHour\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n * //=> true\n */\n\nexport default function isSameHour(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft);\n  var dateRightStartOfHour = startOfHour(dirtyDateRight);\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week?\n *\n * @description\n * Are the given dates in the same week?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n */\nexport default function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import isSameWeek from \"../isSameWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameISOWeek\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week?\n *\n * @description\n * Are the given dates in the same ISO week?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * var result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n * //=> true\n */\n\nexport default function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {\n    weekStartsOn: 1\n  });\n}","import startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n * //=> true\n */\n\nexport default function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfYear = startOfISOWeekYear(dirtyDateLeft);\n  var dateRightStartOfYear = startOfISOWeekYear(dirtyDateRight);\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();\n}","import startOfMinute from \"../startOfMinute/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameMinute\n * @category Minute Helpers\n * @summary Are the given dates in the same minute?\n *\n * @description\n * Are the given dates in the same minute?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n * // in the same minute?\n * var result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n */\n\nexport default function isSameMinute(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft);\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight);\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import startOfQuarter from \"../startOfQuarter/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameQuarter\n * @category Quarter Helpers\n * @summary Are the given dates in the same year quarter?\n *\n * @description\n * Are the given dates in the same year quarter?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same quarter\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n * var result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\n * //=> true\n */\n\nexport default function isSameQuarter(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft);\n  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight);\n  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfSecond\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * const result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\n\nexport default function startOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(0);\n  return date;\n}","import startOfSecond from \"../startOfSecond/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameSecond\n * @category Second Helpers\n * @summary Are the given dates in the same second?\n *\n * @description\n * Are the given dates in the same second?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same second\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500\n * // in the same second?\n * var result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 30, 15),\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\n * )\n * //=> true\n */\n\nexport default function isSameSecond(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft);\n  var dateRightStartOfSecond = startOfSecond(dirtyDateRight);\n  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}","import isSameHour from \"../isSameHour/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisHour\n * @category Hour Helpers\n * @summary Is the given date in the same hour as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same hour as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:00:00 in this hour?\n * var result = isThisHour(new Date(2014, 8, 25, 18))\n * //=> true\n */\n\nexport default function isThisHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameHour(Date.now(), dirtyDate);\n}","import isSameISOWeek from \"../isSameISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisISOWeek\n * @category ISO Week Helpers\n * @summary Is the given date in the same ISO week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same ISO week as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\n * var result = isThisISOWeek(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isThisISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameISOWeek(dirtyDate, Date.now());\n}","import isSameMinute from \"../isSameMinute/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisMinute\n * @category Minute Helpers\n * @summary Is the given date in the same minute as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same minute as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:00 in this minute?\n * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n * //=> true\n */\n\nexport default function isThisMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMinute(Date.now(), dirtyDate);\n}","import isSameMonth from \"../isSameMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisMonth\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * var result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\n\nexport default function isThisMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMonth(Date.now(), dirtyDate);\n}","import isSameQuarter from \"../isSameQuarter/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisQuarter\n * @category Quarter Helpers\n * @summary Is the given date in the same quarter as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same quarter as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this quarter?\n * var result = isThisQuarter(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameQuarter(Date.now(), dirtyDate);\n}","import isSameSecond from \"../isSameSecond/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisSecond\n * @category Second Helpers\n * @summary Is the given date in the same second as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same second as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:15.000 in this second?\n * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n * //=> true\n */\n\nexport default function isThisSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameSecond(Date.now(), dirtyDate);\n}","import isSameWeek from \"../isSameWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\nexport default function isThisWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return isSameWeek(dirtyDate, Date.now(), options);\n}","import isSameYear from \"../isSameYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisYear\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * var result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameYear(dirtyDate, Date.now());\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThursday\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * var result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isThursday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 4;\n}","import isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import addDays from \"../addDays/index.js\";\nimport isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\n\nexport default function isTomorrow(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, addDays(Date.now(), 1));\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isTuesday\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Tuesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * var result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\n\nexport default function isTuesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 2;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isWednesday\n * @category Weekday Helpers\n * @summary Is the given date Wednesday?\n *\n * @description\n * Is the given date Wednesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Wednesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 24 September 2014 Wednesday?\n * const result = isWednesday(new Date(2014, 8, 24))\n * //=> true\n */\n\nexport default function isWednesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 3;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isWithinRange` to `isWithinInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   isWithinRange(\n *     new Date(2014, 0, 3),\n *     new Date(2014, 0, 1), new Date(2014, 0, 7)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   isWithinInterval(\n *     new Date(2014, 0, 3),\n *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date }) // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end }) // => true\n */\nexport default function isWithinInterval(dirtyDate, interval) {\n  requiredArgs(2, arguments);\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  return time >= startTime && time <= endTime;\n}","import isSameDay from \"../isSameDay/index.js\";\nimport subDays from \"../subDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * var result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\n\nexport default function isYesterday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, subDays(Date.now(), 1));\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfDecade\n * @category Decade Helpers\n * @summary Return the last day of a decade for the given date.\n *\n * @description\n * Return the last day of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a decade for 21 December 2012 21:12:00:\n * var result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))\n * //=> Wed Dec 31 2019 00:00:00\n */\n\nexport default function lastDayOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name lastDayOfWeek\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport default function lastDayOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setHours(0, 0, 0, 0);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import lastDayOfWeek from \"../lastDayOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the last day of an ISO week for the given date.\n *\n * @description\n * Return the last day of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week for 2 September 2014 11:55:00:\n * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function lastDayOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return lastDayOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `lastDayOfISOYear` to `lastDayOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * var result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\n\nexport default function lastDayOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  date.setDate(date.getDate() - 1);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfQuarter\n * @category Quarter Helpers\n * @summary Return the last day of a year quarter for the given date.\n *\n * @description\n * Return the last day of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the last day of a quarter\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The last day of a quarter for 2 September 2014 11:55:00:\n * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfYear\n * @category Year Helpers\n * @summary Return the last day of a year for the given date.\n *\n * @description\n * Return the last day of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a year for 2 September 2014 11:55:00:\n * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 00:00:00\n */\n\nexport default function lastDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/lightFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name lightFormat\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. Unlike `format`,\n * `lightFormat` doesn't use locales and outputs date using the most popular tokens.\n *\n * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   |\n * |---------------------------------|---------|-----------------------------------|\n * | AM, PM                          | a..aaa  | AM, PM                            |\n * |                                 | aaaa    | a.m., p.m.                        |\n * |                                 | aaaaa   | a, p                              |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 |\n * |                                 | yy      | 44, 01, 00, 17                    |\n * |                                 | yyy     | 044, 001, 000, 017                |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |\n * |                                 | MM      | 01, 02, ..., 12                   |\n * | Day of month                    | d       | 1, 2, ..., 31                     |\n * |                                 | dd      | 01, 02, ..., 31                   |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |\n * |                                 | hh      | 01, 02, ..., 11, 12               |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |\n * |                                 | HH      | 00, 01, 02, ..., 23               |\n * | Minute                          | m       | 0, 1, ..., 59                     |\n * |                                 | mm      | 00, 01, ..., 59                   |\n * | Second                          | s       | 0, 1, ..., 59                     |\n * |                                 | ss      | 00, 01, ..., 59                   |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |\n * |                                 | SS      | 00, 01, ..., 99                   |\n * |                                 | SSS     | 000, 0001, ..., 999               |\n * |                                 | SSSS    | ...                               |\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * const result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')\n * //=> '2014-02-11'\n */\n\nexport default function lightFormat(dirtyDate, formatStr) {\n  requiredArgs(2, arguments);\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var tokens = formatStr.match(formattingTokensRegExp); // The only case when formattingTokensRegExp doesn't match the string is when it's empty\n\n  if (!tokens) return '';\n  var result = tokens.map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      return formatter(utcDate, substring);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  var matches = input.match(escapedStringRegExp);\n\n  if (!matches) {\n    return input;\n  }\n\n  return matches[1].replace(doubleQuoteRegExp, \"'\");\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n// Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n// 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\nvar daysInYear = 365.2425;\n/**\n * @name milliseconds\n * @category Millisecond Helpers\n * @summary\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n *\n * @description\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n *\n * One month is a year divided by 12.\n *\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {number} the milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // 1 year in milliseconds\n * milliseconds({ years: 1 })\n * //=> 31556952000\n *\n * // 3 months in milliseconds\n * milliseconds({ months: 3 })\n * //=> 7889238000\n */\n\nexport default function milliseconds(_ref) {\n  var years = _ref.years,\n      months = _ref.months,\n      weeks = _ref.weeks,\n      days = _ref.days,\n      hours = _ref.hours,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds;\n  requiredArgs(1, arguments);\n  var totalDays = 0;\n  if (years) totalDays += years * daysInYear;\n  if (months) totalDays += months * (daysInYear / 12);\n  if (weeks) totalDays += weeks * 7;\n  if (days) totalDays += days;\n  var totalSeconds = totalDays * 24 * 60 * 60;\n  if (hours) totalSeconds += hours * 60 * 60;\n  if (minutes) totalSeconds += minutes * 60;\n  if (seconds) totalSeconds += seconds;\n  return Math.round(totalSeconds * 1000);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { millisecondsInHour } from \"../constants/index.js\";\n/**\n * @name millisecondsToHours\n * @category Conversion Helpers\n * @summary Convert milliseconds to hours.\n *\n * @description\n * Convert a number of milliseconds to a full number of hours.\n *\n * @param {number} milliseconds - number of milliseconds to be converted\n *\n * @returns {number} the number of milliseconds converted in hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 7200000 milliseconds to hours:\n * const result = millisecondsToHours(7200000)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = millisecondsToHours(7199999)\n * //=> 1\n */\n\nexport default function millisecondsToHours(milliseconds) {\n  requiredArgs(1, arguments);\n  var hours = milliseconds / millisecondsInHour;\n  return Math.floor(hours);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { millisecondsInMinute } from \"../constants/index.js\";\n/**\n * @name millisecondsToMinutes\n * @category Conversion Helpers\n * @summary Convert milliseconds to minutes.\n *\n * @description\n * Convert a number of milliseconds to a full number of minutes.\n *\n * @param {number} milliseconds - number of milliseconds to be converted.\n *\n * @returns {number} the number of milliseconds converted in minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 60000 milliseconds to minutes:\n * const result = millisecondsToMinutes(60000)\n * //=> 1\n *\n * @example\n * // It uses floor rounding:\n * const result = millisecondsToMinutes(119999)\n * //=> 1\n */\n\nexport default function millisecondsToMinutes(milliseconds) {\n  requiredArgs(1, arguments);\n  var minutes = milliseconds / millisecondsInMinute;\n  return Math.floor(minutes);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { millisecondsInSecond } from \"../constants/index.js\";\n/**\n * @name millisecondsToSeconds\n * @category Conversion Helpers\n * @summary Convert milliseconds to seconds.\n *\n * @description\n * Convert a number of milliseconds to a full number of seconds.\n *\n * @param {number} milliseconds - number of milliseconds to be converted\n *\n * @returns {number} the number of milliseconds converted in seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 1000 miliseconds to seconds:\n * const result = millisecondsToSeconds(1000)\n * //=> 1\n *\n * @example\n * // It uses floor rounding:\n * const result = millisecondsToSeconds(1999)\n * //=> 1\n */\n\nexport default function millisecondsToSeconds(milliseconds) {\n  requiredArgs(1, arguments);\n  var seconds = milliseconds / millisecondsInSecond;\n  return Math.floor(seconds);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { minutesInHour } from \"../constants/index.js\";\n/**\n * @name minutesToHours\n * @category Conversion Helpers\n * @summary Convert minutes to hours.\n *\n * @description\n * Convert a number of minutes to a full number of hours.\n *\n * @param {number} minutes - number of minutes to be converted\n *\n * @returns {number} the number of minutes converted in hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 140 minutes to hours:\n * const result = minutesToHours(120)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = minutesToHours(179)\n * //=> 2\n */\n\nexport default function minutesToHours(minutes) {\n  requiredArgs(1, arguments);\n  var hours = minutes / minutesInHour;\n  return Math.floor(hours);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { millisecondsInMinute } from \"../constants/index.js\";\n/**\n * @name minutesToMilliseconds\n * @category Conversion Helpers\n * @summary Convert minutes to milliseconds.\n *\n * @description\n * Convert a number of minutes to a full number of milliseconds.\n *\n * @param {number} minutes - number of minutes to be converted\n *\n * @returns {number} the number of minutes converted in milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 minutes to milliseconds\n * const result = minutesToMilliseconds(2)\n * //=> 120000\n */\n\nexport default function minutesToMilliseconds(minutes) {\n  requiredArgs(1, arguments);\n  return Math.floor(minutes * millisecondsInMinute);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { secondsInMinute } from \"../constants/index.js\";\n/**\n * @name minutesToSeconds\n * @category Conversion Helpers\n * @summary Convert minutes to seconds.\n *\n * @description\n * Convert a number of minutes to a full number of seconds.\n *\n * @param { number } minutes - number of minutes to be converted\n *\n * @returns {number} the number of minutes converted in seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 minutes to seconds\n * const result = minutesToSeconds(2)\n * //=> 120\n */\n\nexport default function minutesToSeconds(minutes) {\n  requiredArgs(1, arguments);\n  return Math.floor(minutes * secondsInMinute);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { monthsInQuarter } from \"../constants/index.js\";\n/**\n * @name monthsToQuarters\n * @category Conversion Helpers\n * @summary Convert number of months to quarters.\n *\n * @description\n * Convert a number of months to a full number of quarters.\n *\n * @param {number} months - number of months to be converted.\n *\n * @returns {number} the number of months converted in quarters\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 6 months to quarters:\n * const result = monthsToQuarters(6)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = monthsToQuarters(7)\n * //=> 2\n */\n\nexport default function monthsToQuarters(months) {\n  requiredArgs(1, arguments);\n  var quarters = months / monthsInQuarter;\n  return Math.floor(quarters);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { monthsInYear } from \"../constants/index.js\";\n/**\n * @name monthsToYears\n * @category Conversion Helpers\n * @summary Convert number of months to years.\n *\n * @description\n * Convert a number of months to a full number of years.\n *\n * @param {number} months - number of months to be converted\n *\n * @returns {number} the number of months converted in years\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 36 months to years:\n * const result = monthsToYears(36)\n * //=> 3\n *\n * // It uses floor rounding:\n * const result = monthsToYears(40)\n * //=> 3\n */\n\nexport default function monthsToYears(months) {\n  requiredArgs(1, arguments);\n  var years = months / monthsInYear;\n  return Math.floor(years);\n}","import addDays from \"../addDays/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name nextDay\n * @category Weekday Helpers\n * @summary When is the next day of the week?\n *\n * @description\n * When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.\n *\n * @param {Date | number} date - the date to check\n * @param {Day} day - day of the week\n * @returns {Date} - the date is the next day of week\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // When is the next Monday after Mar, 20, 2020?\n * const result = nextDay(new Date(2020, 2, 20), 1)\n * //=> Mon Mar 23 2020 00:00:00\n *\n * @example\n * // When is the next Tuesday after Mar, 21, 2020?\n * const result = nextDay(new Date(2020, 2, 21), 2)\n * //=> Tue Mar 24 2020 00:00:00\n */\n\nexport default function nextDay(date, day) {\n  requiredArgs(2, arguments);\n  var delta = day - getDay(date);\n  if (delta <= 0) delta += 7;\n  return addDays(date, delta);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport nextDay from \"../nextDay/index.js\";\nimport toDate from \"../toDate/index.js\";\n/**\n * @name nextFriday\n * @category Weekday Helpers\n * @summary When is the next Friday?\n *\n * @description\n * When is the next Friday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Friday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Friday after Mar, 22, 2020?\n * const result = nextFriday(new Date(2020, 2, 22))\n * //=> Fri Mar 27 2020 00:00:00\n */\n\nexport default function nextFriday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(toDate(date), 5);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport nextDay from \"../nextDay/index.js\";\nimport toDate from \"../toDate/index.js\";\n/**\n * @name nextMonday\n * @category Weekday Helpers\n * @summary When is the next Monday?\n *\n * @description\n * When is the next Monday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Monday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Monday after Mar, 22, 2020?\n * const result = nextMonday(new Date(2020, 2, 22))\n * //=> Mon Mar 23 2020 00:00:00\n */\n\nexport default function nextMonday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(toDate(date), 1);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport nextDay from \"../nextDay/index.js\";\nimport toDate from \"../toDate/index.js\";\n/**\n * @name nextSaturday\n * @category Weekday Helpers\n * @summary When is the next Saturday?\n *\n * @description\n * When is the next Saturday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Saturday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Saturday after Mar, 22, 2020?\n * const result = nextSaturday(new Date(2020, 2, 22))\n * //=> Sat Mar 28 2020 00:00:00\n */\n\nexport default function nextSaturday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(toDate(date), 6);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport nextDay from \"../nextDay/index.js\";\nimport toDate from \"../toDate/index.js\";\n/**\n * @name nextSunday\n * @category Weekday Helpers\n * @summary When is the next Sunday?\n *\n * @description\n * When is the next Sunday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Sunday after Mar, 22, 2020?\n * const result = nextSunday(new Date(2020, 2, 22))\n * //=> Sun Mar 29 2020 00:00:00\n */\n\nexport default function nextSunday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(toDate(date), 0);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport nextDay from \"../nextDay/index.js\";\nimport toDate from \"../toDate/index.js\";\n/**\n * @name nextThursday\n * @category Weekday Helpers\n * @summary When is the next Thursday?\n *\n * @description\n * When is the next Thursday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Thursday after Mar, 22, 2020?\n * const result = nextThursday(new Date(2020, 2, 22))\n * //=> Thur Mar 26 2020 00:00:00\n */\n\nexport default function nextThursday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(toDate(date), 4);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport nextDay from \"../nextDay/index.js\";\nimport toDate from \"../toDate/index.js\";\n/**\n * @name nextTuesday\n * @category Weekday Helpers\n * @summary When is the next Tuesday?\n *\n * @description\n * When is the next Tuesday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Tuesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Tuesday after Mar, 22, 2020?\n * const result = nextTuesday(new Date(2020, 2, 22))\n * //=> Tue Mar 24 2020 00:00:00\n */\n\nexport default function nextTuesday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(toDate(date), 2);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport nextDay from \"../nextDay/index.js\";\nimport toDate from \"../toDate/index.js\";\n/**\n * @name nextWednesday\n * @category Weekday Helpers\n * @summary When is the next Wednesday?\n *\n * @description\n * When is the next Wednesday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Wednesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Wednesday after Mar, 22, 2020?\n * const result = nextWednesday(new Date(2020, 2, 22))\n * //=> Wed Mar 25 2020 00:00:00\n */\n\nexport default function nextWednesday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(toDate(date), 3);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name parseJSON\n * @category Common Helpers\n * @summary Parse a JSON date string\n *\n * @description\n * Converts a complete ISO date string in UTC time, the typical format for transmitting\n * a date in JSON, to a JavaScript `Date` instance.\n *\n * This is a minimal implementation for converting dates retrieved from a JSON API to\n * a `Date` instance which can be used with other functions in the `date-fns` library.\n * The following formats are supported:\n *\n * - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`\n * - `2000-03-15T05:20:10Z`: Without milliseconds\n * - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages\n * - `2000-03-15T05:20:10+05:45`: With a positive or negative offset, the default JSON encoded format in some other languages\n * - `2000-03-15T05:20:10+0000`: With a zero offset without a colon\n * - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol\n * - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds\n * - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting\n *\n * For convenience and ease of use these other input types are also supported\n * via [toDate]{@link https://date-fns.org/docs/toDate}:\n *\n * - A `Date` instance will be cloned\n * - A `number` will be treated as a timestamp\n *\n * Any other input type or invalid date strings will return an `Invalid Date`.\n *\n * @param {String|Number|Date} argument A fully formed ISO8601 date string to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n */\n\nexport default function parseJSON(argument) {\n  requiredArgs(1, arguments);\n\n  if (typeof argument === 'string') {\n    var parts = argument.match(/(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{0,7}))?(?:Z|(.)(\\d{2}):?(\\d{2})?)?/);\n\n    if (parts) {\n      // Group 8 matches the sign\n      return new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4] - (+parts[9] || 0) * (parts[8] == '-' ? -1 : 1), +parts[5] - (+parts[10] || 0) * (parts[8] == '-' ? -1 : 1), +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));\n    }\n\n    return new Date(NaN);\n  }\n\n  return toDate(argument);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport subDays from \"../subDays/index.js\";\n\n/**\n * @name previousDay\n * @category Weekday Helpers\n * @summary When is the previous day of the week?\n *\n * @description\n * When is the previous day of the week? 0-6 the day of the week, 0 represents Sunday.\n *\n * @param {Date | number} date - the date to check\n * @param {number} day - day of the week\n * @returns {Date} - the date is the previous day of week\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // When is the previous Monday before Mar, 20, 2020?\n * const result = previousDay(new Date(2020, 2, 20), 1)\n * //=> Mon Mar 16 2020 00:00:00\n *\n * @example\n * // When is the previous Tuesday before Mar, 21, 2020?\n * const result = previousDay(new Date(2020, 2, 21), 2)\n * //=> Tue Mar 17 2020 00:00:00\n */\nexport default function previousDay(date, day) {\n  requiredArgs(2, arguments);\n  var delta = getDay(date) - day;\n  if (delta <= 0) delta += 7;\n  return subDays(date, delta);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousFriday\n * @category Weekday Helpers\n * @summary When is the previous Friday?\n *\n * @description\n * When is the previous Friday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Friday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Friday before Jun, 19, 2021?\n * const result = previousFriday(new Date(2021, 5, 19))\n * //=> Fri June 18 2021 00:00:00\n */\n\nexport default function previousFriday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 5);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousMonday\n * @category Weekday Helpers\n * @summary When is the previous Monday?\n *\n * @description\n * When is the previous Monday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Monday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Monday before Jun, 18, 2021?\n * const result = previousMonday(new Date(2021, 5, 18))\n * //=> Mon June 14 2021 00:00:00\n */\n\nexport default function previousMonday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 1);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousSaturday\n * @category Weekday Helpers\n * @summary When is the previous Saturday?\n *\n * @description\n * When is the previous Saturday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Saturday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Saturday before Jun, 20, 2021?\n * const result = previousSaturday(new Date(2021, 5, 20))\n * //=> Sat June 19 2021 00:00:00\n */\n\nexport default function previousSaturday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 6);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousSunday\n * @category Weekday Helpers\n * @summary When is the previous Sunday?\n *\n * @description\n * When is the previous Sunday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Sunday before Jun, 21, 2021?\n * const result = previousSunday(new Date(2021, 5, 21))\n * //=> Sun June 20 2021 00:00:00\n */\n\nexport default function previousSunday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 0);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousThursday\n * @category Weekday Helpers\n * @summary When is the previous Thursday?\n *\n * @description\n * When is the previous Thursday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Thursday before Jun, 18, 2021?\n * const result = previousThursday(new Date(2021, 5, 18))\n * //=> Thu June 17 2021 00:00:00\n */\n\nexport default function previousThursday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 4);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousTuesday\n * @category Weekday Helpers\n * @summary When is the previous Tuesday?\n *\n * @description\n * When is the previous Tuesday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Tuesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Tuesday before Jun, 18, 2021?\n * const result = previousTuesday(new Date(2021, 5, 18))\n * //=> Tue June 15 2021 00:00:00\n */\n\nexport default function previousTuesday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 2);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousWednesday\n * @category Weekday Helpers\n * @summary When is the previous Wednesday?\n *\n * @description\n * When is the previous Wednesday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Wednesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Wednesday before Jun, 18, 2021?\n * const result = previousWednesday(new Date(2021, 5, 18))\n * //=> Wed June 16 2021 00:00:00\n */\n\nexport default function previousWednesday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 3);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { monthsInQuarter } from \"../constants/index.js\";\n/**\n * @name quartersToMonths\n * @category Conversion Helpers\n * @summary Convert number of quarters to months.\n *\n * @description\n * Convert a number of quarters to a full number of months.\n *\n * @param {number} quarters - number of quarters to be converted\n *\n * @returns {number} the number of quarters converted in months\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 quarters to months\n * const result = quartersToMonths(2)\n * //=> 6\n */\n\nexport default function quartersToMonths(quarters) {\n  requiredArgs(1, arguments);\n  return Math.floor(quarters * monthsInQuarter);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { quartersInYear } from \"../constants/index.js\";\n/**\n * @name quartersToYears\n * @category Conversion Helpers\n * @summary Convert number of quarters to years.\n *\n * @description\n * Convert a number of quarters to a full number of years.\n *\n * @param {number} quarters - number of quarters to be converted\n *\n * @returns {number} the number of quarters converted in years\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 8 quarters to years\n * const result = quartersToYears(8)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = quartersToYears(11)\n * //=> 2\n */\n\nexport default function quartersToYears(quarters) {\n  requiredArgs(1, arguments);\n  var years = quarters / quartersInYear;\n  return Math.floor(years);\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name roundToNearestMinutes\n * @category Minute Helpers\n * @summary Rounds the given date to the nearest minute\n *\n * @description\n * Rounds the given date to the nearest minute (or number of minutes).\n * Rounds up when the given date is exactly between the nearest round minutes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to round\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.nearestTo=1] - nearest number of minutes to round to. E.g. `15` to round to quarter hours.\n * @returns {Date} the new date rounded to the closest minute\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.nearestTo` must be between 1 and 30\n *\n * @example\n * // Round 10 July 2014 12:12:34 to nearest minute:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))\n * //=> Thu Jul 10 2014 12:13:00\n *\n * @example\n * // Round 10 July 2014 12:07:30 to nearest quarter hour:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })\n * // rounds up because given date is exactly between 12:00:00 and 12:15:00\n * //=> Thu Jul 10 2014 12:15:00\n */\n\nexport default function roundToNearestMinutes(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only none provided present');\n  }\n\n  var nearestTo = options && 'nearestTo' in options ? toInteger(options.nearestTo) : 1;\n\n  if (nearestTo < 1 || nearestTo > 30) {\n    throw new RangeError('`options.nearestTo` must be between 1 and 30');\n  }\n\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case\n\n  var minutes = date.getMinutes() + seconds / 60;\n  var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;\n  var remainderMinutes = minutes % nearestTo;\n  var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { secondsInHour } from \"../constants/index.js\";\n/**\n * @name secondsToHours\n * @category Conversion Helpers\n * @summary Convert seconds to hours.\n *\n * @description\n * Convert a number of seconds to a full number of hours.\n *\n * @param {number} seconds - number of seconds to be converted\n *\n * @returns {number} the number of seconds converted in hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 7200 seconds into hours\n * const result = secondsToHours(7200)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = secondsToHours(7199)\n * //=> 1\n */\n\nexport default function secondsToHours(seconds) {\n  requiredArgs(1, arguments);\n  var hours = seconds / secondsInHour;\n  return Math.floor(hours);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { millisecondsInSecond } from \"../constants/index.js\";\n/**\n * @name secondsToMilliseconds\n * @category Conversion Helpers\n * @summary Convert seconds to milliseconds.\n *\n * @description\n * Convert a number of seconds to a full number of milliseconds.\n *\n * @param {number} seconds - number of seconds to be converted\n *\n * @returns {number} the number of seconds converted in milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 seconds into milliseconds\n * const result = secondsToMilliseconds(2)\n * //=> 2000\n */\n\nexport default function secondsToMilliseconds(seconds) {\n  requiredArgs(1, arguments);\n  return seconds * millisecondsInSecond;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { secondsInMinute } from \"../constants/index.js\";\n/**\n * @name secondsToMinutes\n * @category Conversion Helpers\n * @summary Convert seconds to minutes.\n *\n * @description\n * Convert a number of seconds to a full number of minutes.\n *\n * @param {number} seconds - number of seconds to be converted\n *\n * @returns {number} the number of seconds converted in minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 120 seconds into minutes\n * const result = secondsToMinutes(120)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = secondsToMinutes(119)\n * //=> 1\n */\n\nexport default function secondsToMinutes(seconds) {\n  requiredArgs(1, arguments);\n  var minutes = seconds / secondsInMinute;\n  return Math.floor(minutes);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getDaysInMonth from \"../getDaysInMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\n\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport setMonth from \"../setMonth/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name set\n * @category Common Helpers\n * @summary Set date values to a given date.\n *\n * @description\n * Set date values to a given date.\n *\n * Sets time values to date from object `values`.\n * A value is not set if it is undefined or null or doesn't exist in `values`.\n *\n * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\n * to use native `Date#setX` methods. If you use this function, you may not want to include the\n * other `setX` functions that date-fns provides if you are concerned about the bundle size.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Object} values - an object with options\n * @param {Number} [values.year] - the number of years to be set\n * @param {Number} [values.month] - the number of months to be set\n * @param {Number} [values.date] - the number of days to be set\n * @param {Number} [values.hours] - the number of hours to be set\n * @param {Number} [values.minutes] - the number of minutes to be set\n * @param {Number} [values.seconds] - the number of seconds to be set\n * @param {Number} [values.milliseconds] - the number of milliseconds to be set\n * @returns {Date} the new date with options set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `values` must be an object\n *\n * @example\n * // Transform 1 September 2014 into 20 October 2015 in a single line:\n * var result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })\n * //=> Tue Oct 20 2015 00:00:00\n *\n * @example\n * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:\n * var result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })\n * //=> Mon Sep 01 2014 12:23:45\n */\nexport default function set(dirtyDate, values) {\n  requiredArgs(2, arguments);\n\n  if (typeof values !== 'object' || values === null) {\n    throw new RangeError('values parameter must be an object');\n  }\n\n  var date = toDate(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  if (values.year != null) {\n    date.setFullYear(values.year);\n  }\n\n  if (values.month != null) {\n    date = setMonth(date, values.month);\n  }\n\n  if (values.date != null) {\n    date.setDate(toInteger(values.date));\n  }\n\n  if (values.hours != null) {\n    date.setHours(toInteger(values.hours));\n  }\n\n  if (values.minutes != null) {\n    date.setMinutes(toInteger(values.minutes));\n  }\n\n  if (values.seconds != null) {\n    date.setSeconds(toInteger(values.seconds));\n  }\n\n  if (values.milliseconds != null) {\n    date.setMilliseconds(toInteger(values.milliseconds));\n  }\n\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setDate\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * var result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function setDate(dirtyDate, dirtyDayOfMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = toInteger(dirtyDayOfMonth);\n  date.setDate(dayOfMonth);\n  return date;\n}","import addDays from \"../addDays/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * var result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport default function setDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var delta = 7 - weekStartsOn;\n  var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;\n  return addDays(date, diff);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setDayOfYear\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * var result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\n\nexport default function setDayOfYear(dirtyDate, dirtyDayOfYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfYear = toInteger(dirtyDayOfYear);\n  date.setMonth(0);\n  date.setDate(dayOfYear);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setHours\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\n\nexport default function setHours(dirtyDate, dirtyHours) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var hours = toInteger(dirtyHours);\n  date.setHours(hours);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport getISODay from \"../getISODay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = getISODay(date);\n  var diff = day - currentDay;\n  return addDays(date, diff);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getISOWeek from \"../getISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeek - the ISO week of the new date\n * @returns {Date} the new date with the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getISOWeek(date) - isoWeek;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMilliseconds\n * @category Millisecond Helpers\n * @summary Set the milliseconds to the given date.\n *\n * @description\n * Set the milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} milliseconds - the milliseconds of the new date\n * @returns {Date} the new date with the milliseconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n * const result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n * //=> Mon Sep 01 2014 11:30:40.300\n */\n\nexport default function setMilliseconds(dirtyDate, dirtyMilliseconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = toInteger(dirtyMilliseconds);\n  date.setMilliseconds(milliseconds);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMinutes\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * const result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\n\nexport default function setMinutes(dirtyDate, dirtyMinutes) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = toInteger(dirtyMinutes);\n  date.setMinutes(minutes);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport setMonth from \"../setMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setQuarter\n * @category Quarter Helpers\n * @summary Set the year quarter to the given date.\n *\n * @description\n * Set the year quarter to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} quarter - the quarter of the new date\n * @returns {Date} the new date with the quarter set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd quarter to 2 July 2014:\n * const result = setQuarter(new Date(2014, 6, 2), 2)\n * //=> Wed Apr 02 2014 00:00:00\n */\n\nexport default function setQuarter(dirtyDate, dirtyQuarter) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = toInteger(dirtyQuarter);\n  var oldQuarter = Math.floor(date.getMonth() / 3) + 1;\n  var diff = quarter - oldQuarter;\n  return setMonth(date, date.getMonth() + diff * 3);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setSeconds\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * const result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\n\nexport default function setSeconds(dirtyDate, dirtySeconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = toInteger(dirtySeconds);\n  date.setSeconds(seconds);\n  return date;\n}","import getWeek from \"../getWeek/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} week - the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * var result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * var result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport default function setWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getWeek(date, options) - week;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport startOfWeekYear from \"../startOfWeekYear/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name setWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Set the local week-numbering year to the given date.\n *\n * @description\n * Set the local week-numbering year to the given date,\n * saving the week number and the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} weekYear - the local week-numbering year of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week-numbering year set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010 with default options:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004)\n * //=> Sat Jan 03 2004 00:00:00\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010,\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport default function setWeekYear(dirtyDate, dirtyWeekYear) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var date = toDate(dirtyDate);\n  var weekYear = toInteger(dirtyWeekYear);\n  var diff = differenceInCalendarDays(date, startOfWeekYear(date, options));\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  date = startOfWeekYear(firstWeek, options);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * const result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\n\nexport default function setYear(dirtyDate, dirtyYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var year = toInteger(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  date.setFullYear(year);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDecade\n * @category Decade Helpers\n * @summary Return the start of a decade for the given date.\n *\n * @description\n * Return the start of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a decade for 21 October 2015 00:00:00:\n * const result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))\n * //=> Jan 01 2010 00:00:00\n */\n\nexport default function startOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfDay from \"../startOfDay/index.js\";\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","/**\n * @name startOfTomorrow\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n * @pure false\n *\n * @description\n * Return the start of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * const result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nexport default function startOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","/**\n * @name startOfYesterday\n * @category Day Helpers\n * @summary Return the start of yesterday.\n * @pure false\n *\n * @description\n * Return the start of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * const result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nexport default function startOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addBusinessDays from \"../addBusinessDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subBusinessDays\n * @category Day Helpers\n * @summary Substract the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Substract 10 business days from 1 September 2014:\n * var result = subBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Aug 18 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function subBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addBusinessDays(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addHours from \"../addHours/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subHours\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * const result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\n\nexport default function subHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addHours(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMinutes from \"../addMinutes/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMinutes\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * const result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\n\nexport default function subMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMinutes(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addQuarters from \"../addQuarters/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subQuarters\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * const result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\n\nexport default function subQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addQuarters(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addSeconds from \"../addSeconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subSeconds\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * const result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\n\nexport default function subSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addSeconds(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addWeeks from \"../addWeeks/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subWeeks\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * const result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\n\nexport default function subWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addWeeks(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addYears from \"../addYears/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * const result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\n\nexport default function subYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { daysInWeek } from \"../constants/index.js\";\n/**\n * @name weeksToDays\n * @category Conversion Helpers\n * @summary Convert weeks to days.\n *\n * @description\n * Convert a number of weeks to a full number of days.\n *\n * @param {number} weeks - number of weeks to be converted\n *\n * @returns {number} the number of weeks converted in days\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 weeks into days\n * const result = weeksToDays(2)\n * //=> 14\n */\n\nexport default function weeksToDays(weeks) {\n  requiredArgs(1, arguments);\n  return Math.floor(weeks * daysInWeek);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { monthsInYear } from \"../constants/index.js\";\n/**\n * @name yearsToMonths\n * @category Conversion Helpers\n * @summary Convert years to months.\n *\n * @description\n * Convert a number of years to a full number of months.\n *\n * @param {number} years - number of years to be converted\n *\n * @returns {number} the number of years converted in months\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 years into months\n * const result = yearsToMonths(2)\n * //=> 24\n */\n\nexport default function yearsToMonths(years) {\n  requiredArgs(1, arguments);\n  return Math.floor(years * monthsInYear);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { quartersInYear } from \"../constants/index.js\";\n/**\n * @name yearsToQuarters\n * @category Conversion Helpers\n * @summary Convert years to quarters.\n *\n * @description\n * Convert a number of years to a full number of quarters.\n *\n * @param {number} years - number of years to be converted\n *\n * @returns {number} the number of years converted in quarters\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 years to quarters\n * const result = yearsToQuarters(2)\n * //=> 8\n */\n\nexport default function yearsToQuarters(years) {\n  requiredArgs(1, arguments);\n  return Math.floor(years * quartersInYear);\n}","// This file is generated automatically by `scripts/build/indices.js`. Please, don't change it.\nexport { default as add } from \"./add/index.js\";\nexport { default as addBusinessDays } from \"./addBusinessDays/index.js\";\nexport { default as addDays } from \"./addDays/index.js\";\nexport { default as addHours } from \"./addHours/index.js\";\nexport { default as addISOWeekYears } from \"./addISOWeekYears/index.js\";\nexport { default as addMilliseconds } from \"./addMilliseconds/index.js\";\nexport { default as addMinutes } from \"./addMinutes/index.js\";\nexport { default as addMonths } from \"./addMonths/index.js\";\nexport { default as addQuarters } from \"./addQuarters/index.js\";\nexport { default as addSeconds } from \"./addSeconds/index.js\";\nexport { default as addWeeks } from \"./addWeeks/index.js\";\nexport { default as addYears } from \"./addYears/index.js\";\nexport { default as areIntervalsOverlapping } from \"./areIntervalsOverlapping/index.js\";\nexport { default as clamp } from \"./clamp/index.js\";\nexport { default as closestIndexTo } from \"./closestIndexTo/index.js\";\nexport { default as closestTo } from \"./closestTo/index.js\";\nexport { default as compareAsc } from \"./compareAsc/index.js\";\nexport { default as compareDesc } from \"./compareDesc/index.js\";\nexport { default as daysToWeeks } from \"./daysToWeeks/index.js\";\nexport { default as differenceInBusinessDays } from \"./differenceInBusinessDays/index.js\";\nexport { default as differenceInCalendarDays } from \"./differenceInCalendarDays/index.js\";\nexport { default as differenceInCalendarISOWeekYears } from \"./differenceInCalendarISOWeekYears/index.js\";\nexport { default as differenceInCalendarISOWeeks } from \"./differenceInCalendarISOWeeks/index.js\";\nexport { default as differenceInCalendarMonths } from \"./differenceInCalendarMonths/index.js\";\nexport { default as differenceInCalendarQuarters } from \"./differenceInCalendarQuarters/index.js\";\nexport { default as differenceInCalendarWeeks } from \"./differenceInCalendarWeeks/index.js\";\nexport { default as differenceInCalendarYears } from \"./differenceInCalendarYears/index.js\";\nexport { default as differenceInDays } from \"./differenceInDays/index.js\";\nexport { default as differenceInHours } from \"./differenceInHours/index.js\";\nexport { default as differenceInISOWeekYears } from \"./differenceInISOWeekYears/index.js\";\nexport { default as differenceInMilliseconds } from \"./differenceInMilliseconds/index.js\";\nexport { default as differenceInMinutes } from \"./differenceInMinutes/index.js\";\nexport { default as differenceInMonths } from \"./differenceInMonths/index.js\";\nexport { default as differenceInQuarters } from \"./differenceInQuarters/index.js\";\nexport { default as differenceInSeconds } from \"./differenceInSeconds/index.js\";\nexport { default as differenceInWeeks } from \"./differenceInWeeks/index.js\";\nexport { default as differenceInYears } from \"./differenceInYears/index.js\";\nexport { default as eachDayOfInterval } from \"./eachDayOfInterval/index.js\";\nexport { default as eachHourOfInterval } from \"./eachHourOfInterval/index.js\";\nexport { default as eachMinuteOfInterval } from \"./eachMinuteOfInterval/index.js\";\nexport { default as eachMonthOfInterval } from \"./eachMonthOfInterval/index.js\";\nexport { default as eachQuarterOfInterval } from \"./eachQuarterOfInterval/index.js\";\nexport { default as eachWeekOfInterval } from \"./eachWeekOfInterval/index.js\";\nexport { default as eachWeekendOfInterval } from \"./eachWeekendOfInterval/index.js\";\nexport { default as eachWeekendOfMonth } from \"./eachWeekendOfMonth/index.js\";\nexport { default as eachWeekendOfYear } from \"./eachWeekendOfYear/index.js\";\nexport { default as eachYearOfInterval } from \"./eachYearOfInterval/index.js\";\nexport { default as endOfDay } from \"./endOfDay/index.js\";\nexport { default as endOfDecade } from \"./endOfDecade/index.js\";\nexport { default as endOfHour } from \"./endOfHour/index.js\";\nexport { default as endOfISOWeek } from \"./endOfISOWeek/index.js\";\nexport { default as endOfISOWeekYear } from \"./endOfISOWeekYear/index.js\";\nexport { default as endOfMinute } from \"./endOfMinute/index.js\";\nexport { default as endOfMonth } from \"./endOfMonth/index.js\";\nexport { default as endOfQuarter } from \"./endOfQuarter/index.js\";\nexport { default as endOfSecond } from \"./endOfSecond/index.js\";\nexport { default as endOfToday } from \"./endOfToday/index.js\";\nexport { default as endOfTomorrow } from \"./endOfTomorrow/index.js\";\nexport { default as endOfWeek } from \"./endOfWeek/index.js\";\nexport { default as endOfYear } from \"./endOfYear/index.js\";\nexport { default as endOfYesterday } from \"./endOfYesterday/index.js\";\nexport { default as format } from \"./format/index.js\";\nexport { default as formatDistance } from \"./formatDistance/index.js\";\nexport { default as formatDistanceStrict } from \"./formatDistanceStrict/index.js\";\nexport { default as formatDistanceToNow } from \"./formatDistanceToNow/index.js\";\nexport { default as formatDistanceToNowStrict } from \"./formatDistanceToNowStrict/index.js\";\nexport { default as formatDuration } from \"./formatDuration/index.js\";\nexport { default as formatISO } from \"./formatISO/index.js\";\nexport { default as formatISO9075 } from \"./formatISO9075/index.js\";\nexport { default as formatISODuration } from \"./formatISODuration/index.js\";\nexport { default as formatRFC3339 } from \"./formatRFC3339/index.js\";\nexport { default as formatRFC7231 } from \"./formatRFC7231/index.js\";\nexport { default as formatRelative } from \"./formatRelative/index.js\";\nexport { default as fromUnixTime } from \"./fromUnixTime/index.js\";\nexport { default as getDate } from \"./getDate/index.js\";\nexport { default as getDay } from \"./getDay/index.js\";\nexport { default as getDayOfYear } from \"./getDayOfYear/index.js\";\nexport { default as getDaysInMonth } from \"./getDaysInMonth/index.js\";\nexport { default as getDaysInYear } from \"./getDaysInYear/index.js\";\nexport { default as getDecade } from \"./getDecade/index.js\";\nexport { default as getHours } from \"./getHours/index.js\";\nexport { default as getISODay } from \"./getISODay/index.js\";\nexport { default as getISOWeek } from \"./getISOWeek/index.js\";\nexport { default as getISOWeekYear } from \"./getISOWeekYear/index.js\";\nexport { default as getISOWeeksInYear } from \"./getISOWeeksInYear/index.js\";\nexport { default as getMilliseconds } from \"./getMilliseconds/index.js\";\nexport { default as getMinutes } from \"./getMinutes/index.js\";\nexport { default as getMonth } from \"./getMonth/index.js\";\nexport { default as getOverlappingDaysInIntervals } from \"./getOverlappingDaysInIntervals/index.js\";\nexport { default as getQuarter } from \"./getQuarter/index.js\";\nexport { default as getSeconds } from \"./getSeconds/index.js\";\nexport { default as getTime } from \"./getTime/index.js\";\nexport { default as getUnixTime } from \"./getUnixTime/index.js\";\nexport { default as getWeek } from \"./getWeek/index.js\";\nexport { default as getWeekOfMonth } from \"./getWeekOfMonth/index.js\";\nexport { default as getWeekYear } from \"./getWeekYear/index.js\";\nexport { default as getWeeksInMonth } from \"./getWeeksInMonth/index.js\";\nexport { default as getYear } from \"./getYear/index.js\";\nexport { default as hoursToMilliseconds } from \"./hoursToMilliseconds/index.js\";\nexport { default as hoursToMinutes } from \"./hoursToMinutes/index.js\";\nexport { default as hoursToSeconds } from \"./hoursToSeconds/index.js\";\nexport { default as intervalToDuration } from \"./intervalToDuration/index.js\";\nexport { default as intlFormat } from \"./intlFormat/index.js\";\nexport { default as isAfter } from \"./isAfter/index.js\";\nexport { default as isBefore } from \"./isBefore/index.js\";\nexport { default as isDate } from \"./isDate/index.js\";\nexport { default as isEqual } from \"./isEqual/index.js\";\nexport { default as isExists } from \"./isExists/index.js\";\nexport { default as isFirstDayOfMonth } from \"./isFirstDayOfMonth/index.js\";\nexport { default as isFriday } from \"./isFriday/index.js\";\nexport { default as isFuture } from \"./isFuture/index.js\";\nexport { default as isLastDayOfMonth } from \"./isLastDayOfMonth/index.js\";\nexport { default as isLeapYear } from \"./isLeapYear/index.js\";\nexport { default as isMatch } from \"./isMatch/index.js\";\nexport { default as isMonday } from \"./isMonday/index.js\";\nexport { default as isPast } from \"./isPast/index.js\";\nexport { default as isSameDay } from \"./isSameDay/index.js\";\nexport { default as isSameHour } from \"./isSameHour/index.js\";\nexport { default as isSameISOWeek } from \"./isSameISOWeek/index.js\";\nexport { default as isSameISOWeekYear } from \"./isSameISOWeekYear/index.js\";\nexport { default as isSameMinute } from \"./isSameMinute/index.js\";\nexport { default as isSameMonth } from \"./isSameMonth/index.js\";\nexport { default as isSameQuarter } from \"./isSameQuarter/index.js\";\nexport { default as isSameSecond } from \"./isSameSecond/index.js\";\nexport { default as isSameWeek } from \"./isSameWeek/index.js\";\nexport { default as isSameYear } from \"./isSameYear/index.js\";\nexport { default as isSaturday } from \"./isSaturday/index.js\";\nexport { default as isSunday } from \"./isSunday/index.js\";\nexport { default as isThisHour } from \"./isThisHour/index.js\";\nexport { default as isThisISOWeek } from \"./isThisISOWeek/index.js\";\nexport { default as isThisMinute } from \"./isThisMinute/index.js\";\nexport { default as isThisMonth } from \"./isThisMonth/index.js\";\nexport { default as isThisQuarter } from \"./isThisQuarter/index.js\";\nexport { default as isThisSecond } from \"./isThisSecond/index.js\";\nexport { default as isThisWeek } from \"./isThisWeek/index.js\";\nexport { default as isThisYear } from \"./isThisYear/index.js\";\nexport { default as isThursday } from \"./isThursday/index.js\";\nexport { default as isToday } from \"./isToday/index.js\";\nexport { default as isTomorrow } from \"./isTomorrow/index.js\";\nexport { default as isTuesday } from \"./isTuesday/index.js\";\nexport { default as isValid } from \"./isValid/index.js\";\nexport { default as isWednesday } from \"./isWednesday/index.js\";\nexport { default as isWeekend } from \"./isWeekend/index.js\";\nexport { default as isWithinInterval } from \"./isWithinInterval/index.js\";\nexport { default as isYesterday } from \"./isYesterday/index.js\";\nexport { default as lastDayOfDecade } from \"./lastDayOfDecade/index.js\";\nexport { default as lastDayOfISOWeek } from \"./lastDayOfISOWeek/index.js\";\nexport { default as lastDayOfISOWeekYear } from \"./lastDayOfISOWeekYear/index.js\";\nexport { default as lastDayOfMonth } from \"./lastDayOfMonth/index.js\";\nexport { default as lastDayOfQuarter } from \"./lastDayOfQuarter/index.js\";\nexport { default as lastDayOfWeek } from \"./lastDayOfWeek/index.js\";\nexport { default as lastDayOfYear } from \"./lastDayOfYear/index.js\";\nexport { default as lightFormat } from \"./lightFormat/index.js\";\nexport { default as max } from \"./max/index.js\";\nexport { default as milliseconds } from \"./milliseconds/index.js\";\nexport { default as millisecondsToHours } from \"./millisecondsToHours/index.js\";\nexport { default as millisecondsToMinutes } from \"./millisecondsToMinutes/index.js\";\nexport { default as millisecondsToSeconds } from \"./millisecondsToSeconds/index.js\";\nexport { default as min } from \"./min/index.js\";\nexport { default as minutesToHours } from \"./minutesToHours/index.js\";\nexport { default as minutesToMilliseconds } from \"./minutesToMilliseconds/index.js\";\nexport { default as minutesToSeconds } from \"./minutesToSeconds/index.js\";\nexport { default as monthsToQuarters } from \"./monthsToQuarters/index.js\";\nexport { default as monthsToYears } from \"./monthsToYears/index.js\";\nexport { default as nextDay } from \"./nextDay/index.js\";\nexport { default as nextFriday } from \"./nextFriday/index.js\";\nexport { default as nextMonday } from \"./nextMonday/index.js\";\nexport { default as nextSaturday } from \"./nextSaturday/index.js\";\nexport { default as nextSunday } from \"./nextSunday/index.js\";\nexport { default as nextThursday } from \"./nextThursday/index.js\";\nexport { default as nextTuesday } from \"./nextTuesday/index.js\";\nexport { default as nextWednesday } from \"./nextWednesday/index.js\";\nexport { default as parse } from \"./parse/index.js\";\nexport { default as parseISO } from \"./parseISO/index.js\";\nexport { default as parseJSON } from \"./parseJSON/index.js\";\nexport { default as previousDay } from \"./previousDay/index.js\";\nexport { default as previousFriday } from \"./previousFriday/index.js\";\nexport { default as previousMonday } from \"./previousMonday/index.js\";\nexport { default as previousSaturday } from \"./previousSaturday/index.js\";\nexport { default as previousSunday } from \"./previousSunday/index.js\";\nexport { default as previousThursday } from \"./previousThursday/index.js\";\nexport { default as previousTuesday } from \"./previousTuesday/index.js\";\nexport { default as previousWednesday } from \"./previousWednesday/index.js\";\nexport { default as quartersToMonths } from \"./quartersToMonths/index.js\";\nexport { default as quartersToYears } from \"./quartersToYears/index.js\";\nexport { default as roundToNearestMinutes } from \"./roundToNearestMinutes/index.js\";\nexport { default as secondsToHours } from \"./secondsToHours/index.js\";\nexport { default as secondsToMilliseconds } from \"./secondsToMilliseconds/index.js\";\nexport { default as secondsToMinutes } from \"./secondsToMinutes/index.js\";\nexport { default as set } from \"./set/index.js\";\nexport { default as setDate } from \"./setDate/index.js\";\nexport { default as setDay } from \"./setDay/index.js\";\nexport { default as setDayOfYear } from \"./setDayOfYear/index.js\";\nexport { default as setHours } from \"./setHours/index.js\";\nexport { default as setISODay } from \"./setISODay/index.js\";\nexport { default as setISOWeek } from \"./setISOWeek/index.js\";\nexport { default as setISOWeekYear } from \"./setISOWeekYear/index.js\";\nexport { default as setMilliseconds } from \"./setMilliseconds/index.js\";\nexport { default as setMinutes } from \"./setMinutes/index.js\";\nexport { default as setMonth } from \"./setMonth/index.js\";\nexport { default as setQuarter } from \"./setQuarter/index.js\";\nexport { default as setSeconds } from \"./setSeconds/index.js\";\nexport { default as setWeek } from \"./setWeek/index.js\";\nexport { default as setWeekYear } from \"./setWeekYear/index.js\";\nexport { default as setYear } from \"./setYear/index.js\";\nexport { default as startOfDay } from \"./startOfDay/index.js\";\nexport { default as startOfDecade } from \"./startOfDecade/index.js\";\nexport { default as startOfHour } from \"./startOfHour/index.js\";\nexport { default as startOfISOWeek } from \"./startOfISOWeek/index.js\";\nexport { default as startOfISOWeekYear } from \"./startOfISOWeekYear/index.js\";\nexport { default as startOfMinute } from \"./startOfMinute/index.js\";\nexport { default as startOfMonth } from \"./startOfMonth/index.js\";\nexport { default as startOfQuarter } from \"./startOfQuarter/index.js\";\nexport { default as startOfSecond } from \"./startOfSecond/index.js\";\nexport { default as startOfToday } from \"./startOfToday/index.js\";\nexport { default as startOfTomorrow } from \"./startOfTomorrow/index.js\";\nexport { default as startOfWeek } from \"./startOfWeek/index.js\";\nexport { default as startOfWeekYear } from \"./startOfWeekYear/index.js\";\nexport { default as startOfYear } from \"./startOfYear/index.js\";\nexport { default as startOfYesterday } from \"./startOfYesterday/index.js\";\nexport { default as sub } from \"./sub/index.js\";\nexport { default as subBusinessDays } from \"./subBusinessDays/index.js\";\nexport { default as subDays } from \"./subDays/index.js\";\nexport { default as subHours } from \"./subHours/index.js\";\nexport { default as subISOWeekYears } from \"./subISOWeekYears/index.js\";\nexport { default as subMilliseconds } from \"./subMilliseconds/index.js\";\nexport { default as subMinutes } from \"./subMinutes/index.js\";\nexport { default as subMonths } from \"./subMonths/index.js\";\nexport { default as subQuarters } from \"./subQuarters/index.js\";\nexport { default as subSeconds } from \"./subSeconds/index.js\";\nexport { default as subWeeks } from \"./subWeeks/index.js\";\nexport { default as subYears } from \"./subYears/index.js\";\nexport { default as toDate } from \"./toDate/index.js\";\nexport { default as weeksToDays } from \"./weeksToDays/index.js\";\nexport { default as yearsToMonths } from \"./yearsToMonths/index.js\";\nexport { default as yearsToQuarters } from \"./yearsToQuarters/index.js\";\nexport * from \"./constants/index.js\";","import displayWeatherFromSavedLoc from \"./displayWeatherFromSavedLoc\";\nimport { format } from \"date-fns\";\n\nexport default function displaySavedLocations() {\n  const savedLocations = document.querySelector(\".saved-locations\");\n  while (savedLocations.firstChild && savedLocations.lastChild) {\n    savedLocations.removeChild(savedLocations.firstChild);\n  }\n  const data = JSON.parse(localStorage.getItem(\"locations\"));\n  if (!data) return;\n\n  data.cities.forEach((el) => {\n    function convertTZ(date, tzString) {\n      return new Date(\n        (typeof date === \"string\" ? new Date(date) : date).toLocaleString(\n          \"en-US\",\n          { timeZone: tzString }\n        )\n      );\n    }\n    const convertedDate = convertTZ(new Date(), el.timezone);\n    const formattedTime = format(convertedDate, \"hh:mma\");\n\n    const savedLocCard = document.createElement(\"div\");\n    savedLocCard.className = \"saved-loc-card\";\n    const savedLocInnerDiv = document.createElement(\"div\");\n    const savedLocName = document.createElement(\"p\");\n    savedLocName.classList = \"saved-loc-name\";\n    const savedLocTemp = document.createElement(\"p\");\n    savedLocTemp.classList = \"saved-loc-temp\";\n    const savedLocTime = document.createElement(\"p\");\n    savedLocTime.className = \"saved-loc-time\";\n    savedLocInnerDiv.append(savedLocName, savedLocTemp);\n    savedLocCard.append(savedLocTime, savedLocInnerDiv);\n    savedLocations.appendChild(savedLocCard);\n    savedLocName.textContent = el.name;\n    data.defaultDegree == \"\\u00B0F\"\n      ? (savedLocTemp.textContent = el.temp + data.defaultDegree)\n      : (savedLocTemp.textContent =\n          Math.floor(((el.temp - 32) * 5) / 9) + \"\\u00B0C\");\n    savedLocCard.style.backgroundImage = `url('/images/backgrounds/${el.dayTime}-${el.condition}.png')`;\n    savedLocTime.innerText = formattedTime;\n\n    savedLocCard.addEventListener(\"click\", displayWeatherFromSavedLoc);\n  });\n}\n","export default function storeLocations(weatherData, city) {\n  const data = JSON.parse(localStorage.getItem(\"locations\"));\n\n  // Determine if it's day or night\n  let dayTime = \"\";\n  if (\n    weatherData.current.dt > weatherData.current.sunrise &&\n    weatherData.current.dt < weatherData.current.sunset\n  ) {\n    dayTime = \"day\";\n  } else if (\n    weatherData.current.dt > weatherData.current.sunrise &&\n    weatherData.current.dt > weatherData.current.sunset\n  ) {\n    dayTime = \"night\";\n  } else if (weatherData.current.dt < weatherData.current.sunrise) {\n    dayTime = \"night\";\n  }\n  // If there is no saved cities\n  if (data.cities.length == 0) {\n    let obj = {\n      name: city,\n      temp: Math.floor(weatherData.current.temp),\n      timezone: weatherData.timezone,\n      lattitude: weatherData.lat,\n      longtitude: weatherData.lon,\n      condition: weatherData.current.weather[0].main,\n      dayTime: dayTime,\n    };\n\n    data.cities.push(obj);\n    localStorage.setItem(\"locations\", JSON.stringify(data));\n    return;\n  }\n  if (data.cities.some((el) => el.name === city)) return;\n\n  let obj1 = {\n    name: city,\n    temp: Math.floor(weatherData.current.temp),\n    timezone: weatherData.timezone,\n    lattitude: weatherData.lat,\n    longtitude: weatherData.lon,\n    condition: weatherData.current.weather[0].main,\n    dayTime: dayTime,\n  };\n  data.cities.push(obj1);\n  localStorage.setItem(\"locations\", JSON.stringify(data));\n}\n","import getWeather from \"./getWeather\";\nimport displayCurrLocationWeather from \"./displayCurrLocationWeather\";\nimport getDegree from \"./getDegree\";\nimport displaySavedLocations from \"./displaySavedLocations\";\nimport storeLocations from \"./storeLocations\";\n\nexport default function initMap(input) {\n  const hourWeatherList = document.querySelector(\".hour-weather-list\");\n  const weekWeatherList = document.querySelector(\".week-weather-list\");\n  const footer = document.querySelector(\".footer\");\n  let degree = getDegree();\n  if (!input) return;\n  const options = {\n    fields: [\"geometry\", \"icon\", \"name\", \"place_id\"],\n    strictBounds: false,\n    types: [\"(cities)\"],\n  };\n  const dropdown = new google.maps.places.Autocomplete(input, options);\n\n  dropdown.addListener(\"place_changed\", () => {\n    const place = dropdown.getPlace();\n    const weather = async () => {\n      let weatherData = await getWeather(\n        place.geometry.location.lat(),\n        place.geometry.location.lng()\n      );\n      let city = place.name;\n      const { hourly, daily } = weatherData;\n\n      while (hourWeatherList.firstChild && hourWeatherList.lastChild) {\n        hourWeatherList.removeChild(hourWeatherList.firstChild);\n      }\n      while (weekWeatherList.firstChild && weekWeatherList.lastChild) {\n        weekWeatherList.removeChild(weekWeatherList.firstChild);\n      }\n      displayCurrLocationWeather(weatherData, city, hourly, daily, degree);\n      storeLocations(weatherData, city);\n      displaySavedLocations();\n    };\n    weather();\n    footer.classList.toggle(\"footer-open\");\n  });\n\n  input.addEventListener(\"keydown\", (e) => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n    }\n  });\n}\n","export default function setDegree(degree) {\n  const celcBtn = document.querySelector(\"#celcius-btn\");\n  const fahrBtn = document.querySelector(\"#fahr-btn\");\n  const data = JSON.parse(localStorage.getItem(\"locations\"));\n\n  // Highlighting degree buttons\n  if (degree == \"\\u00B0C\") {\n    fahrBtn.classList.remove(\"active-btn\");\n    celcBtn.classList.add(\"active-btn\");\n  } else {\n    fahrBtn.classList.add(\"active-btn\");\n    celcBtn.classList.remove(\"active-btn\");\n  }\n  if (!data) {\n    const locations = { defaultDegree: degree, cities: [] };\n    localStorage.setItem(\"locations\", JSON.stringify(locations));\n    fahrBtn.classList.add(\"active-btn\");\n    return;\n  }\n  data.defaultDegree = degree;\n  localStorage.setItem(\"locations\", JSON.stringify(data));\n}\n","import getWeather from \"./getWeather\";\nexport default function refreshSavedLocations() {\n  const data = JSON.parse(localStorage.getItem(\"locations\"));\n  if (!data) return;\n  data.cities.forEach(async (el) => {\n    console.log(\"refreshed\");\n    const weatherData = await getWeather(el.lattitude, el.longtitude);\n    el.temp = Math.floor(weatherData.current.temp);\n    el.time = weatherData.current.dt;\n    el.condition = weatherData.current.weather[0].main;\n    localStorage.setItem(\"locations\", JSON.stringify(data));\n  });\n}\n","import \"regenerator-runtime/runtime\"; // For solving error\nimport getLatLong from \"./modules/getLatLong\";\nimport getWeather from \"./modules/getWeather\";\nimport displayCurrLocationWeather from \"./modules/displayCurrLocationWeather\";\nimport initMap from \"./modules/googlePlaces\";\nimport displaySavedLocations from \"./modules/displaySavedLocations\";\nimport setDegree from \"./modules/setDegree\";\nimport getDegree from \"./modules/getDegree\";\nimport storeLocations from \"./modules/storeLocations\";\nimport refreshSavedLocations from \"./modules/resfreshSavedLocations\";\n\nconst searchBtn = document.querySelector(\"#search-btn\");\nconst footer = document.querySelector(\".footer\");\nconst input = document.querySelector(\"#search-input\");\nconst celcBtn = document.querySelector(\"#celcius-btn\");\nconst fahrBtn = document.querySelector(\"#fahr-btn\");\n\nconst toggleLoadding = () =>\n  document.querySelector(\".spinner\").classList.toggle(\"loading\");\n\ninitMap(input);\n\nconst weather = async () => {\n  toggleLoadding();\n  refreshSavedLocations();\n  let degree = getDegree();\n  setDegree(degree);\n  let coordinates = await getLatLong();\n  let lat = coordinates[0];\n  let lon = coordinates[1];\n  let currCity = coordinates[2];\n  const weatherData = await getWeather(lat, lon, degree);\n  const { hourly, daily } = weatherData;\n  displayCurrLocationWeather(weatherData, currCity, hourly, daily, degree);\n  storeLocations(weatherData, currCity);\n  displaySavedLocations();\n  toggleLoadding();\n};\n\nsearchBtn.addEventListener(\"click\", () => {\n  document.querySelector(\"body\").classList.toggle(\"no-scroll\");\n  footer.classList.toggle(\"footer-open\");\n  input.value = \"\";\n});\n\ncelcBtn.addEventListener(\"click\", async () => {\n  if (celcBtn.classList.contains(\"active-btn\")) return;\n  toggleLoadding();\n  footer.classList.toggle(\"footer-open\");\n  setDegree(\"\\u00B0C\");\n  let degree = getDegree();\n  let coordinates = await getLatLong();\n  let lat = coordinates[0];\n  let lon = coordinates[1];\n  let currCity = coordinates[2];\n  const weatherData = await getWeather(lat, lon);\n  const { hourly, daily } = weatherData;\n  displayCurrLocationWeather(weatherData, currCity, hourly, daily, degree);\n  storeLocations(weatherData, currCity);\n  displaySavedLocations();\n  toggleLoadding();\n});\n\nfahrBtn.addEventListener(\"click\", async () => {\n  if (fahrBtn.classList.contains(\"active-btn\")) return;\n  toggleLoadding();\n  footer.classList.toggle(\"footer-open\");\n  setDegree(\"\\u00B0F\");\n  let degree = getDegree();\n  let coordinates = await getLatLong();\n  let lat = coordinates[0];\n  let lon = coordinates[1];\n  let currCity = coordinates[2];\n  const weatherData = await getWeather(lat, lon, degree);\n  const { hourly, daily } = weatherData;\n  displayCurrLocationWeather(weatherData, currCity, hourly, daily, degree);\n  storeLocations(weatherData, currCity);\n  displaySavedLocations();\n  toggleLoadding();\n});\n\nweather();\nlet intervar;\ndocument.querySelector(\"#move-right\").addEventListener(\"mousedown\", () => {\n  const el = document.querySelector(\".hour-weather-list\");\n  intervar = setInterval(() => {\n    el.scrollLeft = el.scrollLeft - 100;\n  }, 100);\n});\ndocument.querySelector(\"#move-right\").addEventListener(\"mouseup\", () => {\n  clearInterval(intervar);\n});\n\ndocument.querySelector(\"#move-left\").addEventListener(\"mousedown\", () => {\n  console.log(\"left\");\n  const el = document.querySelector(\".hour-weather-list\");\n  intervar = setInterval(() => {\n    el.scrollLeft = el.scrollLeft + 100;\n  }, 100);\n});\ndocument.querySelector(\"#move-left\").addEventListener(\"mouseup\", () => {\n  clearInterval(intervar);\n});\n"]}